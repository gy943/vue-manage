{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport { createSymbol } from '../../util/symbol';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport { getECData } from '../../util/innerStore';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeSymbolDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this.group.removeAll();\n    var symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, false, opt);\n\n    this.group.add(symbolEl);\n    this._incremental = null;\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    if (this._incremental) {\n      return;\n    }\n\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points);\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n    // PENDING Incremental data?\n\n\n    if (data.count() > 2e6) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var symbolEl;\n\n    if (this._incremental) {\n      symbolEl = new LargeSymbolPath();\n\n      this._incremental.addDisplayable(symbolEl, true);\n    } else {\n      symbolEl = new LargeSymbolPath({\n        rectHover: true,\n        cursor: 'default',\n        startIndex: taskParams.start,\n        endIndex: taskParams.end\n      });\n      symbolEl.incremental = true;\n      this.group.add(symbolEl);\n    }\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, !!this._incremental, opt);\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, isIncremental, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(symbolEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      symbolEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex >= 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n        }\n      });\n    }\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  LargeSymbolDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;","map":{"version":3,"names":["__extends","graphic","createSymbol","IncrementalDisplayable","getECData","BOOST_SIZE_THRESHOLD","LargeSymbolPathShape","LargeSymbolPath","_super","opts","call","prototype","getDefaultShape","buildPath","path","shape","points","size","symbolProxy","symbolProxyShape","ctx","getContext","canBoost","_ctx","i","length","x","y","isNaN","softClipShape","contain","width","height","afterBrush","fillRect","findDataIndex","w","Math","max","h","idx","x0","y0","Path","LargeSymbolDraw","group","Group","isPersistent","_incremental","updateData","data","opt","removeAll","symbolEl","rectHover","cursor","setShape","getLayout","_setCommon","add","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","_clearIncremental","count","silent","incrementalUpdate","taskParams","addDisplayable","start","end","incremental","isIncremental","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","globalStyle","visualColor","fill","ecData_1","seriesIndex","on","e","dataIndex","offsetX","offsetY","remove","clearDisplaybles"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport { createSymbol } from '../../util/symbol';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport { getECData } from '../../util/innerStore';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeSymbolDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this.group.removeAll();\n    var symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, false, opt);\n\n    this.group.add(symbolEl);\n    this._incremental = null;\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    if (this._incremental) {\n      return;\n    }\n\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points);\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n    // PENDING Incremental data?\n\n\n    if (data.count() > 2e6) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var symbolEl;\n\n    if (this._incremental) {\n      symbolEl = new LargeSymbolPath();\n\n      this._incremental.addDisplayable(symbolEl, true);\n    } else {\n      symbolEl = new LargeSymbolPath({\n        rectHover: true,\n        cursor: 'default',\n        startIndex: taskParams.start,\n        endIndex: taskParams.end\n      });\n      symbolEl.incremental = true;\n      this.group.add(symbolEl);\n    }\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, !!this._incremental, opt);\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, isIncremental, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(symbolEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      symbolEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex >= 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n        }\n      });\n    }\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  LargeSymbolDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module"}