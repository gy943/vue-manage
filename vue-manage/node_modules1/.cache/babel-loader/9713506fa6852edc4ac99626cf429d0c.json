{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { isClipPathChanged } from '../../canvas/helper';\n\nfunction generateClipPathsKey(clipPaths) {\n  var key = [];\n\n  if (clipPaths) {\n    for (var i = 0; i < clipPaths.length; i++) {\n      var clipPath = clipPaths[i];\n      key.push(clipPath.id);\n    }\n  }\n\n  return key.join(',');\n}\n\nexport function hasClipPath(displayable) {\n  var clipPaths = displayable.__clipPaths;\n  return clipPaths && clipPaths.length > 0;\n}\n\nvar ClippathManager = function (_super) {\n  __extends(ClippathManager, _super);\n\n  function ClippathManager(zrId, svgRoot) {\n    var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\n\n    _this._refGroups = {};\n    _this._keyDuplicateCount = {};\n    return _this;\n  }\n\n  ClippathManager.prototype.markAllUnused = function () {\n    _super.prototype.markAllUnused.call(this);\n\n    for (var key in this._refGroups) {\n      this.markDomUnused(this._refGroups[key]);\n    }\n\n    this._keyDuplicateCount = {};\n  };\n\n  ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\n    if (!hasClipPath(displayable)) {\n      return;\n    }\n\n    var clipPaths = displayable.__clipPaths;\n    var keyDuplicateCount = this._keyDuplicateCount;\n    var clipPathKey = generateClipPathsKey(clipPaths);\n\n    if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\n      keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\n      keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\n      keyDuplicateCount[clipPathKey]++;\n    }\n\n    return this._refGroups[clipPathKey] || (this._refGroups[clipPathKey] = this.createElement('g'));\n  };\n\n  ClippathManager.prototype.update = function (displayable, prevDisplayable) {\n    var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\n\n    if (clipGroup) {\n      this.markDomUsed(clipGroup);\n      this.updateDom(clipGroup, displayable.__clipPaths);\n    }\n\n    return clipGroup;\n  };\n\n  ;\n\n  ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\n    if (clipPaths && clipPaths.length > 0) {\n      var defs = this.getDefs(true);\n      var clipPath = clipPaths[0];\n      var clipPathEl = void 0;\n      var id = void 0;\n\n      if (clipPath._dom) {\n        id = clipPath._dom.getAttribute('id');\n        clipPathEl = clipPath._dom;\n\n        if (!defs.contains(clipPathEl)) {\n          defs.appendChild(clipPathEl);\n        }\n      } else {\n        id = 'zr' + this._zrId + '-clip-' + this.nextId;\n        ++this.nextId;\n        clipPathEl = this.createElement('clipPath');\n        clipPathEl.setAttribute('id', id);\n        defs.appendChild(clipPathEl);\n        clipPath._dom = clipPathEl;\n      }\n\n      var svgProxy = this.getSvgProxy(clipPath);\n      svgProxy.brush(clipPath);\n      var pathEl = this.getSvgElement(clipPath);\n      clipPathEl.innerHTML = '';\n      clipPathEl.appendChild(pathEl);\n      parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n      if (clipPaths.length > 1) {\n        this.updateDom(clipPathEl, clipPaths.slice(1));\n      }\n    } else {\n      if (parentEl) {\n        parentEl.setAttribute('clip-path', 'none');\n      }\n    }\n  };\n\n  ;\n\n  ClippathManager.prototype.markUsed = function (displayable) {\n    var _this = this;\n\n    if (displayable.__clipPaths) {\n      zrUtil.each(displayable.__clipPaths, function (clipPath) {\n        if (clipPath._dom) {\n          _super.prototype.markDomUsed.call(_this, clipPath._dom);\n        }\n      });\n    }\n  };\n\n  ;\n\n  ClippathManager.prototype.removeUnused = function () {\n    _super.prototype.removeUnused.call(this);\n\n    var newRefGroupsMap = {};\n\n    for (var key in this._refGroups) {\n      var group = this._refGroups[key];\n\n      if (!this.isDomUnused(group)) {\n        newRefGroupsMap[key] = group;\n      } else if (group.parentNode) {\n        group.parentNode.removeChild(group);\n      }\n    }\n\n    this._refGroups = newRefGroupsMap;\n  };\n\n  return ClippathManager;\n}(Definable);\n\nexport default ClippathManager;","map":{"version":3,"names":["__extends","Definable","zrUtil","isClipPathChanged","generateClipPathsKey","clipPaths","key","i","length","clipPath","push","id","join","hasClipPath","displayable","__clipPaths","ClippathManager","_super","zrId","svgRoot","_this","call","_refGroups","_keyDuplicateCount","prototype","markAllUnused","markDomUnused","_getClipPathGroup","prevDisplayable","keyDuplicateCount","clipPathKey","createElement","update","clipGroup","markDomUsed","updateDom","parentEl","defs","getDefs","clipPathEl","_dom","getAttribute","contains","appendChild","_zrId","nextId","setAttribute","svgProxy","getSvgProxy","brush","pathEl","getSvgElement","innerHTML","slice","markUsed","each","removeUnused","newRefGroupsMap","group","isDomUnused","parentNode","removeChild"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/zrender/lib/svg/helper/ClippathManager.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { isClipPathChanged } from '../../canvas/helper';\nfunction generateClipPathsKey(clipPaths) {\n    var key = [];\n    if (clipPaths) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            key.push(clipPath.id);\n        }\n    }\n    return key.join(',');\n}\nexport function hasClipPath(displayable) {\n    var clipPaths = displayable.__clipPaths;\n    return clipPaths && clipPaths.length > 0;\n}\nvar ClippathManager = (function (_super) {\n    __extends(ClippathManager, _super);\n    function ClippathManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\n        _this._refGroups = {};\n        _this._keyDuplicateCount = {};\n        return _this;\n    }\n    ClippathManager.prototype.markAllUnused = function () {\n        _super.prototype.markAllUnused.call(this);\n        for (var key in this._refGroups) {\n            this.markDomUnused(this._refGroups[key]);\n        }\n        this._keyDuplicateCount = {};\n    };\n    ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\n        if (!hasClipPath(displayable)) {\n            return;\n        }\n        var clipPaths = displayable.__clipPaths;\n        var keyDuplicateCount = this._keyDuplicateCount;\n        var clipPathKey = generateClipPathsKey(clipPaths);\n        if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\n            keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\n            keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\n            keyDuplicateCount[clipPathKey]++;\n        }\n        return this._refGroups[clipPathKey]\n            || (this._refGroups[clipPathKey] = this.createElement('g'));\n    };\n    ClippathManager.prototype.update = function (displayable, prevDisplayable) {\n        var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\n        if (clipGroup) {\n            this.markDomUsed(clipGroup);\n            this.updateDom(clipGroup, displayable.__clipPaths);\n        }\n        return clipGroup;\n    };\n    ;\n    ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\n        if (clipPaths && clipPaths.length > 0) {\n            var defs = this.getDefs(true);\n            var clipPath = clipPaths[0];\n            var clipPathEl = void 0;\n            var id = void 0;\n            if (clipPath._dom) {\n                id = clipPath._dom.getAttribute('id');\n                clipPathEl = clipPath._dom;\n                if (!defs.contains(clipPathEl)) {\n                    defs.appendChild(clipPathEl);\n                }\n            }\n            else {\n                id = 'zr' + this._zrId + '-clip-' + this.nextId;\n                ++this.nextId;\n                clipPathEl = this.createElement('clipPath');\n                clipPathEl.setAttribute('id', id);\n                defs.appendChild(clipPathEl);\n                clipPath._dom = clipPathEl;\n            }\n            var svgProxy = this.getSvgProxy(clipPath);\n            svgProxy.brush(clipPath);\n            var pathEl = this.getSvgElement(clipPath);\n            clipPathEl.innerHTML = '';\n            clipPathEl.appendChild(pathEl);\n            parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n            if (clipPaths.length > 1) {\n                this.updateDom(clipPathEl, clipPaths.slice(1));\n            }\n        }\n        else {\n            if (parentEl) {\n                parentEl.setAttribute('clip-path', 'none');\n            }\n        }\n    };\n    ;\n    ClippathManager.prototype.markUsed = function (displayable) {\n        var _this = this;\n        if (displayable.__clipPaths) {\n            zrUtil.each(displayable.__clipPaths, function (clipPath) {\n                if (clipPath._dom) {\n                    _super.prototype.markDomUsed.call(_this, clipPath._dom);\n                }\n            });\n        }\n    };\n    ;\n    ClippathManager.prototype.removeUnused = function () {\n        _super.prototype.removeUnused.call(this);\n        var newRefGroupsMap = {};\n        for (var key in this._refGroups) {\n            var group = this._refGroups[key];\n            if (!this.isDomUnused(group)) {\n                newRefGroupsMap[key] = group;\n            }\n            else if (group.parentNode) {\n                group.parentNode.removeChild(group);\n            }\n        }\n        this._refGroups = newRefGroupsMap;\n    };\n    return ClippathManager;\n}(Definable));\nexport default ClippathManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}