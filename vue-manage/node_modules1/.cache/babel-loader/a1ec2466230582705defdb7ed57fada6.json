{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport * as graphicUtil from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport { parsePercent } from '../../util/number';\nimport ComponentModel from '../../model/Component';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\nvar TRANSFORM_PROPS = {\n  x: 1,\n  y: 1,\n  scaleX: 1,\n  scaleY: 1,\n  originX: 1,\n  originY: 1,\n  rotation: 1\n};\n;\nvar inner = modelUtil.makeInner();\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // ------------------------\n// Preprocessor\n// ------------------------\n\nvar preprocessor = function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n};\n\n;\n\nvar GraphicComponentModel =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentModel, _super);\n\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this.option.elements = elements;\n  };\n\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList, null);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge'); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  };\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   */\n\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  }; // FIXME\n  // Pass to view using payload? setOption has a payload?\n\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: [] // parentId: null\n\n  };\n  return GraphicComponentModel;\n}(ComponentModel); // ------------------------\n// View\n// ------------------------\n\n\nvar GraphicComponentView =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentView, _super);\n\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  };\n  /**\n   * Update graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n\n      if (elType === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n\n      var $action = elOption.$action || 'merge';\n\n      if ($action === 'merge') {\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(elExisting, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(elExisting, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el && textContentOption) {\n        if ($action === 'merge') {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if ($action === 'replace') {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n\n      if (el) {\n        var elInner = inner(el);\n        elInner.__ecGraphicWidthOption = elOption.width;\n        elInner.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n        graphicUtil.setTooltipConfig({\n          el: el,\n          componentModel: graphicModel,\n          itemName: el.name,\n          itemTooltipOption: elOption.tooltip\n        });\n      }\n    });\n  };\n  /**\n   * Locate graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.__ecGraphicWidth,\n        height: parentElInner.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  };\n  /**\n   * Clear all elements.\n   */\n\n\n  GraphicComponentView.prototype._clear = function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, 'graphic type can not be found');\n  }\n\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).__ecGraphicId = id;\n}\n\nfunction removeEl(elExisting, elMap) {\n  var existElParent = elExisting && elExisting.parent;\n\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\n    existElParent.remove(elExisting);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      } // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n\n\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(preprocessor);\n}","map":{"version":3,"names":["__extends","zrUtil","modelUtil","graphicUtil","layoutUtil","parsePercent","ComponentModel","ComponentView","getECData","isEC4CompatibleStyle","convertFromEC4CompatibleStyle","TRANSFORM_PROPS","x","y","scaleX","scaleY","originX","originY","rotation","inner","makeInner","_nonShapeGraphicElements","path","compoundPath","group","Group","image","Image","text","Text","preprocessor","option","graphicOption","graphic","isArray","elements","GraphicComponentModel","_super","_this","apply","arguments","type","preventAutoZ","prototype","mergeOption","ecModel","call","optionUpdated","newOption","isInit","thisOption","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","elOptionsToUpdate","_elOptionsToUpdate","each","resultItem","index","newElOption","process","env","NODE_ENV","assert","isObject","existing","push","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","i","length","splice","$action","optionList","result","parentOption","children","useElOptionsToUpdate","els","defaultOption","GraphicComponentView","init","_elMap","createHashMap","render","graphicModel","api","_lastGraphicModel","_clear","_updateElements","_relocate","elMap","rootGroup","elOption","id","convertOptionIdName","elExisting","get","parentId","targetElParent","elType","elOptionStyle","style","hv","textVerticalAlign","textBaseline","verticalAlign","align","textContentOption","textContent","textConfig","convertResult","elOptionCleaned","getCleanedElOption","parent","attr","createEl","removeEl","el","textContentExisting","getTextContent","setTextContent","elInner","__ecGraphicWidthOption","width","__ecGraphicHeightOption","height","setEventData","setTooltipConfig","componentModel","itemName","name","itemTooltipOption","tooltip","elOptions","apiWidth","getWidth","apiHeight","getHeight","isGroup","parentEl","isParentRoot","parentElInner","__ecGraphicWidth","__ecGraphicHeight","containerInfo","positionElement","boundingMode","bounding","dispose","graphicType","Clz","hasOwn","getShapeClass","add","set","__ecGraphicId","existElParent","traverse","removeKey","remove","extend","concat","LOCATION_PARAMS","isSetLoc","obj","props","isSet","prop","existElOption","keyInfo","newElParentOption","newElOptCopy","newType","merge","mergeLayoutParam","ignoreSize","copyLayoutParams","existItem","existingGroupOpt","newGroupOpt","eventData","silent","ignore","componentType","componentIndex","info","install","registers","registerComponentModel","registerComponentView","registerPreprocessor"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/component/graphic/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport * as graphicUtil from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport { parsePercent } from '../../util/number';\nimport ComponentModel from '../../model/Component';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\nvar TRANSFORM_PROPS = {\n  x: 1,\n  y: 1,\n  scaleX: 1,\n  scaleY: 1,\n  originX: 1,\n  originY: 1,\n  rotation: 1\n};\n;\nvar inner = modelUtil.makeInner();\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // ------------------------\n// Preprocessor\n// ------------------------\n\nvar preprocessor = function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n};\n\n;\n\nvar GraphicComponentModel =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentModel, _super);\n\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this.option.elements = elements;\n  };\n\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList, null);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge'); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  };\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   */\n\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  }; // FIXME\n  // Pass to view using payload? setOption has a payload?\n\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: [] // parentId: null\n\n  };\n  return GraphicComponentModel;\n}(ComponentModel); // ------------------------\n// View\n// ------------------------\n\n\nvar GraphicComponentView =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentView, _super);\n\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  };\n  /**\n   * Update graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n\n      if (elType === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n\n      var $action = elOption.$action || 'merge';\n\n      if ($action === 'merge') {\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(elExisting, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(elExisting, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el && textContentOption) {\n        if ($action === 'merge') {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if ($action === 'replace') {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n\n      if (el) {\n        var elInner = inner(el);\n        elInner.__ecGraphicWidthOption = elOption.width;\n        elInner.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n        graphicUtil.setTooltipConfig({\n          el: el,\n          componentModel: graphicModel,\n          itemName: el.name,\n          itemTooltipOption: elOption.tooltip\n        });\n      }\n    });\n  };\n  /**\n   * Locate graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.__ecGraphicWidth,\n        height: parentElInner.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  };\n  /**\n   * Clear all elements.\n   */\n\n\n  GraphicComponentView.prototype._clear = function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, 'graphic type can not be found');\n  }\n\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).__ecGraphicId = id;\n}\n\nfunction removeEl(elExisting, elMap) {\n  var existElParent = elExisting && elExisting.parent;\n\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\n    existElParent.remove(elExisting);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      } // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n\n\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(preprocessor);\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAO,KAAKC,UAAZ,MAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,oBAAT,EAA+BC,6BAA/B,QAAoE,wBAApE;AACA,IAAIC,eAAe,GAAG;EACpBC,CAAC,EAAE,CADiB;EAEpBC,CAAC,EAAE,CAFiB;EAGpBC,MAAM,EAAE,CAHY;EAIpBC,MAAM,EAAE,CAJY;EAKpBC,OAAO,EAAE,CALW;EAMpBC,OAAO,EAAE,CANW;EAOpBC,QAAQ,EAAE;AAPU,CAAtB;AASA;AACA,IAAIC,KAAK,GAAGjB,SAAS,CAACkB,SAAV,EAAZ;AACA,IAAIC,wBAAwB,GAAG;EAC7B;EACAC,IAAI,EAAE,IAFuB;EAG7BC,YAAY,EAAE,IAHe;EAI7B;EACAC,KAAK,EAAErB,WAAW,CAACsB,KALU;EAM7BC,KAAK,EAAEvB,WAAW,CAACwB,KANU;EAO7BC,IAAI,EAAEzB,WAAW,CAAC0B;AAPW,CAA/B,C,CAQG;AACH;AACA;;AAEA,IAAIC,YAAY,GAAG,UAAUC,MAAV,EAAkB;EACnC,IAAIC,aAAa,GAAGD,MAAM,CAACE,OAA3B,CADmC,CACC;EACpC;EACA;EACA;EACA;EACA;;EAEA,IAAIhC,MAAM,CAACiC,OAAP,CAAeF,aAAf,CAAJ,EAAmC;IACjC,IAAI,CAACA,aAAa,CAAC,CAAD,CAAd,IAAqB,CAACA,aAAa,CAAC,CAAD,CAAb,CAAiBG,QAA3C,EAAqD;MACnDJ,MAAM,CAACE,OAAP,GAAiB,CAAC;QAChBE,QAAQ,EAAEH;MADM,CAAD,CAAjB;IAGD,CAJD,MAIO;MACL;MACA;MACAD,MAAM,CAACE,OAAP,GAAiB,CAACF,MAAM,CAACE,OAAP,CAAe,CAAf,CAAD,CAAjB;IACD;EACF,CAVD,MAUO,IAAID,aAAa,IAAI,CAACA,aAAa,CAACG,QAApC,EAA8C;IACnDJ,MAAM,CAACE,OAAP,GAAiB,CAAC;MAChBE,QAAQ,EAAE,CAACH,aAAD;IADM,CAAD,CAAjB;EAGD;AACF,CAvBD;;AAyBA;;AAEA,IAAII,qBAAqB;AACzB;AACA,UAAUC,MAAV,EAAkB;EAChBrC,SAAS,CAACoC,qBAAD,EAAwBC,MAAxB,CAAT;;EAEA,SAASD,qBAAT,GAAiC;IAC/B,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IAEAF,KAAK,CAACG,IAAN,GAAaL,qBAAqB,CAACK,IAAnC;IACAH,KAAK,CAACI,YAAN,GAAqB,IAArB;IACA,OAAOJ,KAAP;EACD;;EAEDF,qBAAqB,CAACO,SAAtB,CAAgCC,WAAhC,GAA8C,UAAUb,MAAV,EAAkBc,OAAlB,EAA2B;IACvE;IACA,IAAIV,QAAQ,GAAG,KAAKJ,MAAL,CAAYI,QAA3B;IACA,KAAKJ,MAAL,CAAYI,QAAZ,GAAuB,IAAvB;;IAEAE,MAAM,CAACM,SAAP,CAAiBC,WAAjB,CAA6BE,IAA7B,CAAkC,IAAlC,EAAwCf,MAAxC,EAAgDc,OAAhD;;IAEA,KAAKd,MAAL,CAAYI,QAAZ,GAAuBA,QAAvB;EACD,CARD;;EAUAC,qBAAqB,CAACO,SAAtB,CAAgCI,aAAhC,GAAgD,UAAUC,SAAV,EAAqBC,MAArB,EAA6B;IAC3E,IAAIC,UAAU,GAAG,KAAKnB,MAAtB;IACA,IAAIoB,OAAO,GAAG,CAACF,MAAM,GAAGC,UAAH,GAAgBF,SAAvB,EAAkCb,QAAhD;IACA,IAAIiB,SAAS,GAAGF,UAAU,CAACf,QAAX,GAAsBc,MAAM,GAAG,EAAH,GAAQC,UAAU,CAACf,QAA/D;IACA,IAAIkB,aAAa,GAAG,EAApB;;IAEA,KAAKC,QAAL,CAAcH,OAAd,EAAuBE,aAAvB,EAAsC,IAAtC;;IAEA,IAAIE,aAAa,GAAGrD,SAAS,CAACsD,eAAV,CAA0BJ,SAA1B,EAAqCC,aAArC,EAAoD,aAApD,CAApB,CAR2E,CAQa;;IAExF,IAAII,iBAAiB,GAAG,KAAKC,kBAAL,GAA0B,EAAlD;IACAzD,MAAM,CAAC0D,IAAP,CAAYJ,aAAZ,EAA2B,UAAUK,UAAV,EAAsBC,KAAtB,EAA6B;MACtD,IAAIC,WAAW,GAAGF,UAAU,CAACZ,SAA7B;;MAEA,IAAIe,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QACzChE,MAAM,CAACiE,MAAP,CAAcjE,MAAM,CAACkE,QAAP,CAAgBL,WAAhB,KAAgCF,UAAU,CAACQ,QAAzD,EAAmE,iCAAnE;MACD;;MAED,IAAI,CAACN,WAAL,EAAkB;QAChB;MACD;;MAEDL,iBAAiB,CAACY,IAAlB,CAAuBP,WAAvB;MACAQ,uBAAuB,CAACV,UAAD,EAAaE,WAAb,CAAvB;MACAS,uBAAuB,CAACnB,SAAD,EAAYS,KAAZ,EAAmBC,WAAnB,CAAvB;MACAU,oBAAoB,CAACpB,SAAS,CAACS,KAAD,CAAV,EAAmBC,WAAnB,CAApB;IACD,CAfD,EAeG,IAfH,EAX2E,CA0BjE;;IAEV,KAAK,IAAIW,CAAC,GAAGrB,SAAS,CAACsB,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;MAC9C,IAAIrB,SAAS,CAACqB,CAAD,CAAT,IAAgB,IAApB,EAA0B;QACxBrB,SAAS,CAACuB,MAAV,CAAiBF,CAAjB,EAAoB,CAApB;MACD,CAFD,MAEO;QACL;QACA;QACA,OAAOrB,SAAS,CAACqB,CAAD,CAAT,CAAaG,OAApB;MACD;IACF;EACF,CArCD;EAsCA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAGExC,qBAAqB,CAACO,SAAtB,CAAgCW,QAAhC,GAA2C,UAAUuB,UAAV,EAAsBC,MAAtB,EAA8BC,YAA9B,EAA4C;IACrF9E,MAAM,CAAC0D,IAAP,CAAYkB,UAAZ,EAAwB,UAAU9C,MAAV,EAAkB;MACxC,IAAI,CAACA,MAAL,EAAa;QACX;MACD;;MAED,IAAIgD,YAAJ,EAAkB;QAChBhD,MAAM,CAACgD,YAAP,GAAsBA,YAAtB;MACD;;MAEDD,MAAM,CAACT,IAAP,CAAYtC,MAAZ;MACA,IAAIiD,QAAQ,GAAGjD,MAAM,CAACiD,QAAtB;;MAEA,IAAIjD,MAAM,CAACU,IAAP,KAAgB,OAAhB,IAA2BuC,QAA/B,EAAyC;QACvC,KAAK1B,QAAL,CAAc0B,QAAd,EAAwBF,MAAxB,EAAgC/C,MAAhC;MACD,CAduC,CActC;;;MAGF,OAAOA,MAAM,CAACiD,QAAd;IACD,CAlBD,EAkBG,IAlBH;EAmBD,CApBD,CA3EgB,CA+Fb;EACH;;;EAGA5C,qBAAqB,CAACO,SAAtB,CAAgCsC,oBAAhC,GAAuD,YAAY;IACjE,IAAIC,GAAG,GAAG,KAAKxB,kBAAf,CADiE,CAC9B;;IAEnC,KAAKA,kBAAL,GAA0B,IAA1B;IACA,OAAOwB,GAAP;EACD,CALD;;EAOA9C,qBAAqB,CAACK,IAAtB,GAA6B,SAA7B;EACAL,qBAAqB,CAAC+C,aAAtB,GAAsC;IACpChD,QAAQ,EAAE,EAD0B,CACvB;;EADuB,CAAtC;EAIA,OAAOC,qBAAP;AACD,CAhHD,CAgHE9B,cAhHF,CAFA,C,CAkHmB;AACnB;AACA;;;AAGA,IAAI8E,oBAAoB;AACxB;AACA,UAAU/C,MAAV,EAAkB;EAChBrC,SAAS,CAACoF,oBAAD,EAAuB/C,MAAvB,CAAT;;EAEA,SAAS+C,oBAAT,GAAgC;IAC9B,IAAI9C,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IAEAF,KAAK,CAACG,IAAN,GAAa2C,oBAAoB,CAAC3C,IAAlC;IACA,OAAOH,KAAP;EACD;;EAED8C,oBAAoB,CAACzC,SAArB,CAA+B0C,IAA/B,GAAsC,YAAY;IAChD,KAAKC,MAAL,GAAcrF,MAAM,CAACsF,aAAP,EAAd;EACD,CAFD;;EAIAH,oBAAoB,CAACzC,SAArB,CAA+B6C,MAA/B,GAAwC,UAAUC,YAAV,EAAwB5C,OAAxB,EAAiC6C,GAAjC,EAAsC;IAC5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAID,YAAY,KAAK,KAAKE,iBAA1B,EAA6C;MAC3C,KAAKC,MAAL;IACD;;IAED,KAAKD,iBAAL,GAAyBF,YAAzB;;IAEA,KAAKI,eAAL,CAAqBJ,YAArB;;IAEA,KAAKK,SAAL,CAAeL,YAAf,EAA6BC,GAA7B;EACD,CAnBD;EAoBA;AACF;AACA;;;EAGEN,oBAAoB,CAACzC,SAArB,CAA+BkD,eAA/B,GAAiD,UAAUJ,YAAV,EAAwB;IACvE,IAAIhC,iBAAiB,GAAGgC,YAAY,CAACR,oBAAb,EAAxB;;IAEA,IAAI,CAACxB,iBAAL,EAAwB;MACtB;IACD;;IAED,IAAIsC,KAAK,GAAG,KAAKT,MAAjB;IACA,IAAIU,SAAS,GAAG,KAAKxE,KAArB,CARuE,CAQ3C;;IAE5BvB,MAAM,CAAC0D,IAAP,CAAYF,iBAAZ,EAA+B,UAAUwC,QAAV,EAAoB;MACjD,IAAIC,EAAE,GAAGhG,SAAS,CAACiG,mBAAV,CAA8BF,QAAQ,CAACC,EAAvC,EAA2C,IAA3C,CAAT;MACA,IAAIE,UAAU,GAAGF,EAAE,IAAI,IAAN,GAAaH,KAAK,CAACM,GAAN,CAAUH,EAAV,CAAb,GAA6B,IAA9C;MACA,IAAII,QAAQ,GAAGpG,SAAS,CAACiG,mBAAV,CAA8BF,QAAQ,CAACK,QAAvC,EAAiD,IAAjD,CAAf;MACA,IAAIC,cAAc,GAAGD,QAAQ,IAAI,IAAZ,GAAmBP,KAAK,CAACM,GAAN,CAAUC,QAAV,CAAnB,GAAyCN,SAA9D;MACA,IAAIQ,MAAM,GAAGP,QAAQ,CAACxD,IAAtB;MACA,IAAIgE,aAAa,GAAGR,QAAQ,CAACS,KAA7B;;MAEA,IAAIF,MAAM,KAAK,MAAX,IAAqBC,aAAzB,EAAwC;QACtC;QACA;QACA,IAAIR,QAAQ,CAACU,EAAT,IAAeV,QAAQ,CAACU,EAAT,CAAY,CAAZ,CAAnB,EAAmC;UACjCF,aAAa,CAACG,iBAAd,GAAkCH,aAAa,CAACI,YAAd,GAA6BJ,aAAa,CAACK,aAAd,GAA8BL,aAAa,CAACM,KAAd,GAAsB,IAAnH;QACD;MACF;;MAED,IAAIC,iBAAiB,GAAGf,QAAQ,CAACgB,WAAjC;MACA,IAAIC,UAAU,GAAGjB,QAAQ,CAACiB,UAA1B;;MAEA,IAAIT,aAAa,IAAIhG,oBAAoB,CAACgG,aAAD,EAAgBD,MAAhB,EAAwB,CAAC,CAACU,UAA1B,EAAsC,CAAC,CAACF,iBAAxC,CAAzC,EAAqG;QACnG,IAAIG,aAAa,GAAGzG,6BAA6B,CAAC+F,aAAD,EAAgBD,MAAhB,EAAwB,IAAxB,CAAjD;;QAEA,IAAI,CAACU,UAAD,IAAeC,aAAa,CAACD,UAAjC,EAA6C;UAC3CA,UAAU,GAAGjB,QAAQ,CAACiB,UAAT,GAAsBC,aAAa,CAACD,UAAjD;QACD;;QAED,IAAI,CAACF,iBAAD,IAAsBG,aAAa,CAACF,WAAxC,EAAqD;UACnDD,iBAAiB,GAAGG,aAAa,CAACF,WAAlC;QACD;MACF,CA7BgD,CA6B/C;;;MAGF,IAAIG,eAAe,GAAGC,kBAAkB,CAACpB,QAAD,CAAxC,CAhCiD,CAgCG;;MAEpD,IAAIlC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QACzCmC,UAAU,IAAInG,MAAM,CAACiE,MAAP,CAAcqC,cAAc,KAAKH,UAAU,CAACkB,MAA5C,EAAoD,mCAApD,CAAd;MACD;;MAED,IAAI1C,OAAO,GAAGqB,QAAQ,CAACrB,OAAT,IAAoB,OAAlC;;MAEA,IAAIA,OAAO,KAAK,OAAhB,EAAyB;QACvBwB,UAAU,GAAGA,UAAU,CAACmB,IAAX,CAAgBH,eAAhB,CAAH,GAAsCI,QAAQ,CAACtB,EAAD,EAAKK,cAAL,EAAqBa,eAArB,EAAsCrB,KAAtC,CAAxD;MACD,CAFD,MAEO,IAAInB,OAAO,KAAK,SAAhB,EAA2B;QAChC6C,QAAQ,CAACrB,UAAD,EAAaL,KAAb,CAAR;QACAyB,QAAQ,CAACtB,EAAD,EAAKK,cAAL,EAAqBa,eAArB,EAAsCrB,KAAtC,CAAR;MACD,CAHM,MAGA,IAAInB,OAAO,KAAK,QAAhB,EAA0B;QAC/B6C,QAAQ,CAACrB,UAAD,EAAaL,KAAb,CAAR;MACD;;MAED,IAAI2B,EAAE,GAAG3B,KAAK,CAACM,GAAN,CAAUH,EAAV,CAAT;;MAEA,IAAIwB,EAAE,IAAIV,iBAAV,EAA6B;QAC3B,IAAIpC,OAAO,KAAK,OAAhB,EAAyB;UACvB,IAAI+C,mBAAmB,GAAGD,EAAE,CAACE,cAAH,EAA1B;UACAD,mBAAmB,GAAGA,mBAAmB,CAACJ,IAApB,CAAyBP,iBAAzB,CAAH,GAAiDU,EAAE,CAACG,cAAH,CAAkB,IAAI1H,WAAW,CAAC0B,IAAhB,CAAqBmF,iBAArB,CAAlB,CAApE;QACD,CAHD,MAGO,IAAIpC,OAAO,KAAK,SAAhB,EAA2B;UAChC8C,EAAE,CAACG,cAAH,CAAkB,IAAI1H,WAAW,CAAC0B,IAAhB,CAAqBmF,iBAArB,CAAlB;QACD;MACF;;MAED,IAAIU,EAAJ,EAAQ;QACN,IAAII,OAAO,GAAG3G,KAAK,CAACuG,EAAD,CAAnB;QACAI,OAAO,CAACC,sBAAR,GAAiC9B,QAAQ,CAAC+B,KAA1C;QACAF,OAAO,CAACG,uBAAR,GAAkChC,QAAQ,CAACiC,MAA3C;QACAC,YAAY,CAACT,EAAD,EAAKjC,YAAL,EAAmBQ,QAAnB,CAAZ;QACA9F,WAAW,CAACiI,gBAAZ,CAA6B;UAC3BV,EAAE,EAAEA,EADuB;UAE3BW,cAAc,EAAE5C,YAFW;UAG3B6C,QAAQ,EAAEZ,EAAE,CAACa,IAHc;UAI3BC,iBAAiB,EAAEvC,QAAQ,CAACwC;QAJD,CAA7B;MAMD;IACF,CAxED;EAyED,CAnFD;EAoFA;AACF;AACA;;;EAGErD,oBAAoB,CAACzC,SAArB,CAA+BmD,SAA/B,GAA2C,UAAUL,YAAV,EAAwBC,GAAxB,EAA6B;IACtE,IAAIgD,SAAS,GAAGjD,YAAY,CAAC1D,MAAb,CAAoBI,QAApC;IACA,IAAI6D,SAAS,GAAG,KAAKxE,KAArB;IACA,IAAIuE,KAAK,GAAG,KAAKT,MAAjB;IACA,IAAIqD,QAAQ,GAAGjD,GAAG,CAACkD,QAAJ,EAAf;IACA,IAAIC,SAAS,GAAGnD,GAAG,CAACoD,SAAJ,EAAhB,CALsE,CAKrC;;IAEjC,KAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiE,SAAS,CAAChE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;MACzC,IAAIwB,QAAQ,GAAGyC,SAAS,CAACjE,CAAD,CAAxB;MACA,IAAIyB,EAAE,GAAGhG,SAAS,CAACiG,mBAAV,CAA8BF,QAAQ,CAACC,EAAvC,EAA2C,IAA3C,CAAT;MACA,IAAIwB,EAAE,GAAGxB,EAAE,IAAI,IAAN,GAAaH,KAAK,CAACM,GAAN,CAAUH,EAAV,CAAb,GAA6B,IAAtC;;MAEA,IAAI,CAACwB,EAAD,IAAO,CAACA,EAAE,CAACqB,OAAf,EAAwB;QACtB;MACD;;MAED,IAAIC,QAAQ,GAAGtB,EAAE,CAACJ,MAAlB;MACA,IAAI2B,YAAY,GAAGD,QAAQ,KAAKhD,SAAhC,CAVyC,CAUE;;MAE3C,IAAI8B,OAAO,GAAG3G,KAAK,CAACuG,EAAD,CAAnB;MACA,IAAIwB,aAAa,GAAG/H,KAAK,CAAC6H,QAAD,CAAzB;MACAlB,OAAO,CAACqB,gBAAR,GAA2B9I,YAAY,CAACyH,OAAO,CAACC,sBAAT,EAAiCkB,YAAY,GAAGN,QAAH,GAAcO,aAAa,CAACC,gBAAzE,CAAZ,IAA0G,CAArI;MACArB,OAAO,CAACsB,iBAAR,GAA4B/I,YAAY,CAACyH,OAAO,CAACG,uBAAT,EAAkCgB,YAAY,GAAGJ,SAAH,GAAeK,aAAa,CAACE,iBAA3E,CAAZ,IAA6G,CAAzI;IACD,CAvBqE,CAuBpE;;;IAGF,KAAK,IAAI3E,CAAC,GAAGiE,SAAS,CAAChE,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;MAC9C,IAAIwB,QAAQ,GAAGyC,SAAS,CAACjE,CAAD,CAAxB;MACA,IAAIyB,EAAE,GAAGhG,SAAS,CAACiG,mBAAV,CAA8BF,QAAQ,CAACC,EAAvC,EAA2C,IAA3C,CAAT;MACA,IAAIwB,EAAE,GAAGxB,EAAE,IAAI,IAAN,GAAaH,KAAK,CAACM,GAAN,CAAUH,EAAV,CAAb,GAA6B,IAAtC;;MAEA,IAAI,CAACwB,EAAL,EAAS;QACP;MACD;;MAED,IAAIsB,QAAQ,GAAGtB,EAAE,CAACJ,MAAlB;MACA,IAAI4B,aAAa,GAAG/H,KAAK,CAAC6H,QAAD,CAAzB;MACA,IAAIK,aAAa,GAAGL,QAAQ,KAAKhD,SAAb,GAAyB;QAC3CgC,KAAK,EAAEW,QADoC;QAE3CT,MAAM,EAAEW;MAFmC,CAAzB,GAGhB;QACFb,KAAK,EAAEkB,aAAa,CAACC,gBADnB;QAEFjB,MAAM,EAAEgB,aAAa,CAACE;MAFpB,CAHJ,CAX8C,CAiB3C;MACH;MACA;MACA;;MAEAhJ,UAAU,CAACkJ,eAAX,CAA2B5B,EAA3B,EAA+BzB,QAA/B,EAAyCoD,aAAzC,EAAwD,IAAxD,EAA8D;QAC5D1C,EAAE,EAAEV,QAAQ,CAACU,EAD+C;QAE5D4C,YAAY,EAAEtD,QAAQ,CAACuD;MAFqC,CAA9D;IAID;EACF,CArDD;EAsDA;AACF;AACA;;;EAGEpE,oBAAoB,CAACzC,SAArB,CAA+BiD,MAA/B,GAAwC,YAAY;IAClD,IAAIG,KAAK,GAAG,KAAKT,MAAjB;IACAS,KAAK,CAACpC,IAAN,CAAW,UAAU+D,EAAV,EAAc;MACvBD,QAAQ,CAACC,EAAD,EAAK3B,KAAL,CAAR;IACD,CAFD;IAGA,KAAKT,MAAL,GAAcrF,MAAM,CAACsF,aAAP,EAAd;EACD,CAND;;EAQAH,oBAAoB,CAACzC,SAArB,CAA+B8G,OAA/B,GAAyC,YAAY;IACnD,KAAK7D,MAAL;EACD,CAFD;;EAIAR,oBAAoB,CAAC3C,IAArB,GAA4B,SAA5B;EACA,OAAO2C,oBAAP;AACD,CAzMD,CAyME7E,aAzMF,CAFA;;AA6MA,SAASiH,QAAT,CAAkBtB,EAAlB,EAAsBK,cAAtB,EAAsCN,QAAtC,EAAgDF,KAAhD,EAAuD;EACrD,IAAI2D,WAAW,GAAGzD,QAAQ,CAACxD,IAA3B;;EAEA,IAAIsB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzChE,MAAM,CAACiE,MAAP,CAAcwF,WAAd,EAA2B,0BAA3B;EACD;;EAED,IAAIC,GAAG,GAAG1J,MAAM,CAAC2J,MAAP,CAAcvI,wBAAd,EAAwCqI,WAAxC,EAAqD;EAC/D;EADU,EAERrI,wBAAwB,CAACqI,WAAD,CAFhB,GAEgCvJ,WAAW,CAAC0J,aAAZ,CAA0BH,WAA1B,CAF1C;;EAIA,IAAI3F,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzChE,MAAM,CAACiE,MAAP,CAAcyF,GAAd,EAAmB,+BAAnB;EACD;;EAED,IAAIjC,EAAE,GAAG,IAAIiC,GAAJ,CAAQ1D,QAAR,CAAT;EACAM,cAAc,CAACuD,GAAf,CAAmBpC,EAAnB;EACA3B,KAAK,CAACgE,GAAN,CAAU7D,EAAV,EAAcwB,EAAd;EACAvG,KAAK,CAACuG,EAAD,CAAL,CAAUsC,aAAV,GAA0B9D,EAA1B;AACD;;AAED,SAASuB,QAAT,CAAkBrB,UAAlB,EAA8BL,KAA9B,EAAqC;EACnC,IAAIkE,aAAa,GAAG7D,UAAU,IAAIA,UAAU,CAACkB,MAA7C;;EAEA,IAAI2C,aAAJ,EAAmB;IACjB7D,UAAU,CAAC3D,IAAX,KAAoB,OAApB,IAA+B2D,UAAU,CAAC8D,QAAX,CAAoB,UAAUxC,EAAV,EAAc;MAC/DD,QAAQ,CAACC,EAAD,EAAK3B,KAAL,CAAR;IACD,CAF8B,CAA/B;IAGAA,KAAK,CAACoE,SAAN,CAAgBhJ,KAAK,CAACiF,UAAD,CAAL,CAAkB4D,aAAlC;IACAC,aAAa,CAACG,MAAd,CAAqBhE,UAArB;EACD;AACF,C,CAAC;;;AAGF,SAASiB,kBAAT,CAA4BpB,QAA5B,EAAsC;EACpCA,QAAQ,GAAGhG,MAAM,CAACoK,MAAP,CAAc,EAAd,EAAkBpE,QAAlB,CAAX;EACAhG,MAAM,CAAC0D,IAAP,CAAY,CAAC,IAAD,EAAO,UAAP,EAAmB,SAAnB,EAA8B,IAA9B,EAAoC,UAApC,EAAgD,aAAhD,EAA+D2G,MAA/D,CAAsElK,UAAU,CAACmK,eAAjF,CAAZ,EAA+G,UAAUhC,IAAV,EAAgB;IAC7H,OAAOtC,QAAQ,CAACsC,IAAD,CAAf;EACD,CAFD;EAGA,OAAOtC,QAAP;AACD;;AAED,SAASuE,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;EAC5B,IAAIC,KAAJ;EACA1K,MAAM,CAAC0D,IAAP,CAAY+G,KAAZ,EAAmB,UAAUE,IAAV,EAAgB;IACjCH,GAAG,CAACG,IAAD,CAAH,IAAa,IAAb,IAAqBH,GAAG,CAACG,IAAD,CAAH,KAAc,MAAnC,KAA8CD,KAAK,GAAG,IAAtD;EACD,CAFD;EAGA,OAAOA,KAAP;AACD;;AAED,SAASrG,uBAAT,CAAiCV,UAAjC,EAA6CE,WAA7C,EAA0D;EACxD,IAAI+G,aAAa,GAAGjH,UAAU,CAACQ,QAA/B,CADwD,CACf;;EAEzCN,WAAW,CAACoC,EAAZ,GAAiBtC,UAAU,CAACkH,OAAX,CAAmB5E,EAApC;EACA,CAACpC,WAAW,CAACrB,IAAb,IAAqBoI,aAArB,KAAuC/G,WAAW,CAACrB,IAAZ,GAAmBoI,aAAa,CAACpI,IAAxE,EAJwD,CAIuB;;EAE/E,IAAIqB,WAAW,CAACwC,QAAZ,IAAwB,IAA5B,EAAkC;IAChC,IAAIyE,iBAAiB,GAAGjH,WAAW,CAACiB,YAApC;;IAEA,IAAIgG,iBAAJ,EAAuB;MACrBjH,WAAW,CAACwC,QAAZ,GAAuByE,iBAAiB,CAAC7E,EAAzC;IACD,CAFD,MAEO,IAAI2E,aAAJ,EAAmB;MACxB/G,WAAW,CAACwC,QAAZ,GAAuBuE,aAAa,CAACvE,QAArC;IACD;EACF,CAduD,CActD;;;EAGFxC,WAAW,CAACiB,YAAZ,GAA2B,IAA3B;AACD;;AAED,SAASR,uBAAT,CAAiCnB,SAAjC,EAA4CS,KAA5C,EAAmDC,WAAnD,EAAgE;EAC9D;EACA,IAAIkH,YAAY,GAAG/K,MAAM,CAACoK,MAAP,CAAc,EAAd,EAAkBvG,WAAlB,CAAnB;EACA,IAAI+G,aAAa,GAAGzH,SAAS,CAACS,KAAD,CAA7B;EACA,IAAIe,OAAO,GAAGd,WAAW,CAACc,OAAZ,IAAuB,OAArC;;EAEA,IAAIA,OAAO,KAAK,OAAhB,EAAyB;IACvB,IAAIiG,aAAJ,EAAmB;MACjB,IAAI9G,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QACzC,IAAIgH,OAAO,GAAGnH,WAAW,CAACrB,IAA1B;QACAxC,MAAM,CAACiE,MAAP,CAAc,CAAC+G,OAAD,IAAYJ,aAAa,CAACpI,IAAd,KAAuBwI,OAAjD,EAA0D,gDAA1D;MACD,CAJgB,CAIf;MACF;;;MAGAhL,MAAM,CAACiL,KAAP,CAAaL,aAAb,EAA4BG,YAA5B,EAA0C,IAA1C,EARiB,CAQgC;;MAEjD5K,UAAU,CAAC+K,gBAAX,CAA4BN,aAA5B,EAA2CG,YAA3C,EAAyD;QACvDI,UAAU,EAAE;MAD2C,CAAzD,EAViB,CAYb;;MAEJhL,UAAU,CAACiL,gBAAX,CAA4BvH,WAA5B,EAAyC+G,aAAzC;IACD,CAfD,MAeO;MACLzH,SAAS,CAACS,KAAD,CAAT,GAAmBmH,YAAnB;IACD;EACF,CAnBD,MAmBO,IAAIpG,OAAO,KAAK,SAAhB,EAA2B;IAChCxB,SAAS,CAACS,KAAD,CAAT,GAAmBmH,YAAnB;EACD,CAFM,MAEA,IAAIpG,OAAO,KAAK,QAAhB,EAA0B;IAC/B;IACAiG,aAAa,KAAKzH,SAAS,CAACS,KAAD,CAAT,GAAmB,IAAxB,CAAb;EACD;AACF;;AAED,SAASW,oBAAT,CAA8B8G,SAA9B,EAAyCxH,WAAzC,EAAsD;EACpD,IAAI,CAACwH,SAAL,EAAgB;IACd;EACD;;EAEDA,SAAS,CAAC3E,EAAV,GAAe7C,WAAW,CAAC6C,EAAZ,GAAiB,CAAC;EACjC6D,QAAQ,CAAC1G,WAAD,EAAc,CAAC,MAAD,EAAS,OAAT,CAAd,CADwB,EACU;EAC1C0G,QAAQ,CAAC1G,WAAD,EAAc,CAAC,KAAD,EAAQ,QAAR,CAAd,CAFwB,CAAhC,CALoD,CAOT;;EAE3C,IAAIwH,SAAS,CAAC7I,IAAV,KAAmB,OAAvB,EAAgC;IAC9B,IAAI8I,gBAAgB,GAAGD,SAAvB;IACA,IAAIE,WAAW,GAAG1H,WAAlB;IACAyH,gBAAgB,CAACvD,KAAjB,IAA0B,IAA1B,KAAmCuD,gBAAgB,CAACvD,KAAjB,GAAyBwD,WAAW,CAACxD,KAAZ,GAAoB,CAAhF;IACAuD,gBAAgB,CAACrD,MAAjB,IAA2B,IAA3B,KAAoCqD,gBAAgB,CAACrD,MAAjB,GAA0BsD,WAAW,CAACtD,MAAZ,GAAqB,CAAnF;EACD;AACF;;AAED,SAASC,YAAT,CAAsBT,EAAtB,EAA0BjC,YAA1B,EAAwCQ,QAAxC,EAAkD;EAChD,IAAIwF,SAAS,GAAGjL,SAAS,CAACkH,EAAD,CAAT,CAAc+D,SAA9B,CADgD,CACP;;EAEzC,IAAI,CAAC/D,EAAE,CAACgE,MAAJ,IAAc,CAAChE,EAAE,CAACiE,MAAlB,IAA4B,CAACF,SAAjC,EAA4C;IAC1CA,SAAS,GAAGjL,SAAS,CAACkH,EAAD,CAAT,CAAc+D,SAAd,GAA0B;MACpCG,aAAa,EAAE,SADqB;MAEpCC,cAAc,EAAEpG,YAAY,CAACoG,cAFO;MAGpCtD,IAAI,EAAEb,EAAE,CAACa;IAH2B,CAAtC;EAKD,CAT+C,CAS9C;EACF;;;EAGA,IAAIkD,SAAJ,EAAe;IACbA,SAAS,CAACK,IAAV,GAAiB7F,QAAQ,CAAC6F,IAA1B;EACD;AACF;;AAED,OAAO,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;EACjCA,SAAS,CAACC,sBAAV,CAAiC7J,qBAAjC;EACA4J,SAAS,CAACE,qBAAV,CAAgC9G,oBAAhC;EACA4G,SAAS,CAACG,oBAAV,CAA+BrK,YAA/B;AACD"},"metadata":{},"sourceType":"module"}