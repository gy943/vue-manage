{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport * as vec2 from './vector';\nimport BoundingRect from './BoundingRect';\nimport { devicePixelRatio as dpr } from '../config';\nimport { fromLine, fromCubic, fromQuadratic, fromArc } from './bbox';\nimport { cubicAt, cubicLength, cubicSubdivide, quadraticLength, quadraticSubdivide } from './curve';\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\n\nfunction modPI2(radian) {\n  var n = Math.round(radian / PI * 1e8) / 1e8;\n  return n % 2 * PI;\n}\n\nexport function normalizeArcAngles(angles, anticlockwise) {\n  var newStartAngle = modPI2(angles[0]);\n\n  if (newStartAngle < 0) {\n    newStartAngle += PI2;\n  }\n\n  var delta = newStartAngle - angles[0];\n  var newEndAngle = angles[1];\n  newEndAngle += delta;\n\n  if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n    newEndAngle = newStartAngle + PI2;\n  } else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n    newEndAngle = newStartAngle - PI2;\n  } else if (!anticlockwise && newStartAngle > newEndAngle) {\n    newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\n  } else if (anticlockwise && newStartAngle < newEndAngle) {\n    newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\n  }\n\n  angles[0] = newStartAngle;\n  angles[1] = newEndAngle;\n}\n\nvar PathProxy = function () {\n  function PathProxy(notSaveData) {\n    this.dpr = 1;\n    this._xi = 0;\n    this._yi = 0;\n    this._x0 = 0;\n    this._y0 = 0;\n    this._len = 0;\n\n    if (notSaveData) {\n      this._saveData = false;\n    }\n\n    if (this._saveData) {\n      this.data = [];\n    }\n  }\n\n  PathProxy.prototype.increaseVersion = function () {\n    this._version++;\n  };\n\n  PathProxy.prototype.getVersion = function () {\n    return this._version;\n  };\n\n  PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n    segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n\n    if (segmentIgnoreThreshold > 0) {\n      this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\n      this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\n    }\n  };\n\n  PathProxy.prototype.setDPR = function (dpr) {\n    this.dpr = dpr;\n  };\n\n  PathProxy.prototype.setContext = function (ctx) {\n    this._ctx = ctx;\n  };\n\n  PathProxy.prototype.getContext = function () {\n    return this._ctx;\n  };\n\n  PathProxy.prototype.beginPath = function () {\n    this._ctx && this._ctx.beginPath();\n    this.reset();\n    return this;\n  };\n\n  PathProxy.prototype.reset = function () {\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    if (this._pathSegLen) {\n      this._pathSegLen = null;\n      this._pathLen = 0;\n    }\n\n    this._version++;\n  };\n\n  PathProxy.prototype.moveTo = function (x, y) {\n    this._drawPendingPt();\n\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y);\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  };\n\n  PathProxy.prototype.lineTo = function (x, y) {\n    var dx = mathAbs(x - this._xi);\n    var dy = mathAbs(y - this._yi);\n    var exceedUnit = dx > this._ux || dy > this._uy;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n      this._pendingPtDist = 0;\n    } else {\n      var d2 = dx * dx + dy * dy;\n\n      if (d2 > this._pendingPtDist) {\n        this._pendingPtX = x;\n        this._pendingPtY = y;\n        this._pendingPtDist = d2;\n      }\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  };\n\n  PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  };\n\n  PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    tmpAngles[0] = startAngle;\n    tmpAngles[1] = endAngle;\n    normalizeArcAngles(tmpAngles, anticlockwise);\n    startAngle = tmpAngles[0];\n    endAngle = tmpAngles[1];\n    var delta = endAngle - startAngle;\n    this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cy;\n    return this;\n  };\n\n  PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.rect = function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  };\n\n  PathProxy.prototype.closePath = function () {\n    this._drawPendingPt();\n\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  };\n\n  PathProxy.prototype.fill = function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  };\n\n  PathProxy.prototype.stroke = function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  };\n\n  PathProxy.prototype.setLineDash = function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n      this._needsDash = true;\n    } else {\n      this._lineDash = null;\n      this._needsDash = false;\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.setLineDashOffset = function (offset) {\n    this._dashOffset = offset;\n    return this;\n  };\n\n  PathProxy.prototype.len = function () {\n    return this._len;\n  };\n\n  PathProxy.prototype.setData = function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length === len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  };\n\n  PathProxy.prototype.appendPath = function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  };\n\n  PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n  };\n\n  PathProxy.prototype._drawPendingPt = function () {\n    if (this._pendingPtDist > 0) {\n      this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY);\n      this._pendingPtDist = 0;\n    }\n  };\n\n  PathProxy.prototype._expandData = function () {\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  };\n\n  PathProxy.prototype._dashedLineTo = function (x1, y1) {\n    var dashSum = this._dashSum;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var offset = this._dashOffset;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var nDash = lineDash.length;\n    var dash;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx === 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash;\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    }\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  };\n\n  PathProxy.prototype._dashedBezierTo = function (x1, y1, x2, y2, x3, y3) {\n    var ctx = this._ctx;\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var t;\n    var dx;\n    var dy;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    }\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t);\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    }\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  };\n\n  PathProxy.prototype._dashedQuadraticTo = function (x1, y1, x2, y2) {\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  };\n\n  PathProxy.prototype.toStatic = function () {\n    if (!this._saveData) {\n      return;\n    }\n\n    this._drawPendingPt();\n\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray && this._len > 11) {\n        this.data = new Float32Array(data);\n      }\n    }\n  };\n\n  PathProxy.prototype.getBoundingRect = function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n    var i;\n\n    for (i = 0; i < this._len;) {\n      var cmd = data[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          xi = x0 = data[i++];\n          yi = y0 = data[i++];\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle;\n          i += 1;\n          var anticlockwise = !data[i++];\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++];\n          fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      }\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    }\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  };\n\n  PathProxy.prototype._calculateLength = function () {\n    var data = this.data;\n    var len = this._len;\n    var ux = this._ux;\n    var uy = this._uy;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    if (!this._pathSegLen) {\n      this._pathSegLen = [];\n    }\n\n    var pathSegLen = this._pathSegLen;\n    var pathTotalLen = 0;\n    var segCount = 0;\n\n    for (var i = 0; i < len;) {\n      var cmd = data[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      var l = -1;\n\n      switch (cmd) {\n        case CMD.M:\n          xi = x0 = data[i++];\n          yi = y0 = data[i++];\n          break;\n\n        case CMD.L:\n          {\n            var x2 = data[i++];\n            var y2 = data[i++];\n            var dx = x2 - xi;\n            var dy = y2 - yi;\n\n            if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n              l = Math.sqrt(dx * dx + dy * dy);\n              xi = x2;\n              yi = y2;\n            }\n\n            break;\n          }\n\n        case CMD.C:\n          {\n            var x1 = data[i++];\n            var y1 = data[i++];\n            var x2 = data[i++];\n            var y2 = data[i++];\n            var x3 = data[i++];\n            var y3 = data[i++];\n            l = cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n            xi = x3;\n            yi = y3;\n            break;\n          }\n\n        case CMD.Q:\n          {\n            var x1 = data[i++];\n            var y1 = data[i++];\n            var x2 = data[i++];\n            var y2 = data[i++];\n            l = quadraticLength(xi, yi, x1, y1, x2, y2, 10);\n            xi = x2;\n            yi = y2;\n            break;\n          }\n\n        case CMD.A:\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var delta = data[i++];\n          var endAngle = delta + startAngle;\n          i += 1;\n          var anticlockwise = !data[i++];\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          {\n            x0 = xi = data[i++];\n            y0 = yi = data[i++];\n            var width = data[i++];\n            var height = data[i++];\n            l = width * 2 + height * 2;\n            break;\n          }\n\n        case CMD.Z:\n          {\n            var dx = x0 - xi;\n            var dy = y0 - yi;\n            l = Math.sqrt(dx * dx + dy * dy);\n            xi = x0;\n            yi = y0;\n            break;\n          }\n      }\n\n      if (l >= 0) {\n        pathSegLen[segCount++] = l;\n        pathTotalLen += l;\n      }\n    }\n\n    this._pathLen = pathTotalLen;\n    return pathTotalLen;\n  };\n\n  PathProxy.prototype.rebuildPath = function (ctx, percent) {\n    var d = this.data;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n    var x0;\n    var y0;\n    var xi;\n    var yi;\n    var x;\n    var y;\n    var drawPart = percent < 1;\n    var pathSegLen;\n    var pathTotalLen;\n    var accumLength = 0;\n    var segCount = 0;\n    var displayedLength;\n    var pendingPtDist = 0;\n    var pendingPtX;\n    var pendingPtY;\n\n    if (drawPart) {\n      if (!this._pathSegLen) {\n        this._calculateLength();\n      }\n\n      pathSegLen = this._pathSegLen;\n      pathTotalLen = this._pathLen;\n      displayedLength = percent * pathTotalLen;\n\n      if (!displayedLength) {\n        return;\n      }\n    }\n\n    lo: for (var i = 0; i < len;) {\n      var cmd = d[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          if (pendingPtDist > 0) {\n            ctx.lineTo(pendingPtX, pendingPtY);\n            pendingPtDist = 0;\n          }\n\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          {\n            x = d[i++];\n            y = d[i++];\n            var dx = mathAbs(x - xi);\n            var dy = mathAbs(y - yi);\n\n            if (dx > ux || dy > uy) {\n              if (drawPart) {\n                var l = pathSegLen[segCount++];\n\n                if (accumLength + l > displayedLength) {\n                  var t = (displayedLength - accumLength) / l;\n                  ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                  break lo;\n                }\n\n                accumLength += l;\n              }\n\n              ctx.lineTo(x, y);\n              xi = x;\n              yi = y;\n              pendingPtDist = 0;\n            } else {\n              var d2 = dx * dx + dy * dy;\n\n              if (d2 > pendingPtDist) {\n                pendingPtX = x;\n                pendingPtY = y;\n                pendingPtDist = d2;\n              }\n            }\n\n            break;\n          }\n\n        case CMD.C:\n          {\n            var x1 = d[i++];\n            var y1 = d[i++];\n            var x2 = d[i++];\n            var y2 = d[i++];\n            var x3 = d[i++];\n            var y3 = d[i++];\n\n            if (drawPart) {\n              var l = pathSegLen[segCount++];\n\n              if (accumLength + l > displayedLength) {\n                var t = (displayedLength - accumLength) / l;\n                cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\n                cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\n                ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                break lo;\n              }\n\n              accumLength += l;\n            }\n\n            ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            xi = x3;\n            yi = y3;\n            break;\n          }\n\n        case CMD.Q:\n          {\n            var x1 = d[i++];\n            var y1 = d[i++];\n            var x2 = d[i++];\n            var y2 = d[i++];\n\n            if (drawPart) {\n              var l = pathSegLen[segCount++];\n\n              if (accumLength + l > displayedLength) {\n                var t = (displayedLength - accumLength) / l;\n                quadraticSubdivide(xi, x1, x2, t, tmpOutX);\n                quadraticSubdivide(yi, y1, y2, t, tmpOutY);\n                ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                break lo;\n              }\n\n              accumLength += l;\n            }\n\n            ctx.quadraticCurveTo(x1, y1, x2, y2);\n            xi = x2;\n            yi = y2;\n            break;\n          }\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var startAngle = d[i++];\n          var delta = d[i++];\n          var psi = d[i++];\n          var anticlockwise = !d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = mathAbs(rx - ry) > 1e-3;\n          var endAngle = startAngle + delta;\n          var breakBuild = false;\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n              breakBuild = true;\n            }\n\n            accumLength += l;\n          }\n\n          if (isEllipse && ctx.ellipse) {\n            ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n          } else {\n            ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n          }\n\n          if (breakBuild) {\n            break lo;\n          }\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          x = d[i++];\n          y = d[i++];\n          var width = d[i++];\n          var height = d[i++];\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              var d_1 = displayedLength - accumLength;\n              ctx.moveTo(x, y);\n              ctx.lineTo(x + mathMin(d_1, width), y);\n              d_1 -= width;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x + width, y + mathMin(d_1, height));\n              }\n\n              d_1 -= height;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n              }\n\n              d_1 -= width;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n              }\n\n              break lo;\n            }\n\n            accumLength += l;\n          }\n\n          ctx.rect(x, y, width, height);\n          break;\n\n        case CMD.Z:\n          if (pendingPtDist > 0) {\n            ctx.lineTo(pendingPtX, pendingPtY);\n            pendingPtDist = 0;\n          }\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              var t = (displayedLength - accumLength) / l;\n              ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n              break lo;\n            }\n\n            accumLength += l;\n          }\n\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  };\n\n  PathProxy.CMD = CMD;\n\n  PathProxy.initDefaultProps = function () {\n    var proto = PathProxy.prototype;\n    proto._saveData = true;\n    proto._needsDash = false;\n    proto._dashOffset = 0;\n    proto._dashIdx = 0;\n    proto._dashSum = 0;\n    proto._ux = 0;\n    proto._uy = 0;\n    proto._pendingPtDist = 0;\n    proto._version = 0;\n  }();\n\n  return PathProxy;\n}();\n\nexport default PathProxy;","map":{"version":3,"names":["vec2","BoundingRect","devicePixelRatio","dpr","fromLine","fromCubic","fromQuadratic","fromArc","cubicAt","cubicLength","cubicSubdivide","quadraticLength","quadraticSubdivide","CMD","M","L","C","Q","A","Z","R","tmpOutX","tmpOutY","min","max","min2","max2","mathMin","Math","mathMax","mathCos","cos","mathSin","sin","mathSqrt","sqrt","mathAbs","abs","PI","PI2","hasTypedArray","Float32Array","tmpAngles","modPI2","radian","n","round","normalizeArcAngles","angles","anticlockwise","newStartAngle","delta","newEndAngle","PathProxy","notSaveData","_xi","_yi","_x0","_y0","_len","_saveData","data","prototype","increaseVersion","_version","getVersion","setScale","sx","sy","segmentIgnoreThreshold","_ux","_uy","setDPR","setContext","ctx","_ctx","getContext","beginPath","reset","_lineDash","_dashOffset","_pathSegLen","_pathLen","moveTo","x","y","_drawPendingPt","addData","lineTo","dx","dy","exceedUnit","_needsDash","_dashedLineTo","_pendingPtDist","d2","_pendingPtX","_pendingPtY","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","r","startAngle","endAngle","arcTo","radius","rect","w","h","closePath","x0","y0","fill","toStatic","stroke","setLineDash","lineDash","Array","_dashIdx","lineDashSum","i","length","_dashSum","setLineDashOffset","offset","len","setData","appendPath","path","appendSize","appendPathData","k","cmd","a","b","c","d","e","f","g","arguments","_expandData","newData","dashSum","dist","nDash","dash","idx","bezierLen","t","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","isFirst","rx","ry","width","height","_calculateLength","ux","uy","pathSegLen","pathTotalLen","segCount","l","rebuildPath","percent","drawPart","accumLength","displayedLength","pendingPtDist","pendingPtX","pendingPtY","lo","psi","scaleX","scaleY","isEllipse","breakBuild","ellipse","d_1","initDefaultProps","proto"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/zrender/lib/core/PathProxy.js"],"sourcesContent":["import * as vec2 from './vector';\nimport BoundingRect from './BoundingRect';\nimport { devicePixelRatio as dpr } from '../config';\nimport { fromLine, fromCubic, fromQuadratic, fromArc } from './bbox';\nimport { cubicAt, cubicLength, cubicSubdivide, quadraticLength, quadraticSubdivide } from './curve';\nvar CMD = {\n    M: 1,\n    L: 2,\n    C: 3,\n    Q: 4,\n    A: 5,\n    Z: 6,\n    R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\nfunction modPI2(radian) {\n    var n = Math.round(radian / PI * 1e8) / 1e8;\n    return (n % 2) * PI;\n}\nexport function normalizeArcAngles(angles, anticlockwise) {\n    var newStartAngle = modPI2(angles[0]);\n    if (newStartAngle < 0) {\n        newStartAngle += PI2;\n    }\n    var delta = newStartAngle - angles[0];\n    var newEndAngle = angles[1];\n    newEndAngle += delta;\n    if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n        newEndAngle = newStartAngle + PI2;\n    }\n    else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n        newEndAngle = newStartAngle - PI2;\n    }\n    else if (!anticlockwise && newStartAngle > newEndAngle) {\n        newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\n    }\n    else if (anticlockwise && newStartAngle < newEndAngle) {\n        newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\n    }\n    angles[0] = newStartAngle;\n    angles[1] = newEndAngle;\n}\nvar PathProxy = (function () {\n    function PathProxy(notSaveData) {\n        this.dpr = 1;\n        this._xi = 0;\n        this._yi = 0;\n        this._x0 = 0;\n        this._y0 = 0;\n        this._len = 0;\n        if (notSaveData) {\n            this._saveData = false;\n        }\n        if (this._saveData) {\n            this.data = [];\n        }\n    }\n    PathProxy.prototype.increaseVersion = function () {\n        this._version++;\n    };\n    PathProxy.prototype.getVersion = function () {\n        return this._version;\n    };\n    PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n        segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n        if (segmentIgnoreThreshold > 0) {\n            this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\n            this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\n        }\n    };\n    PathProxy.prototype.setDPR = function (dpr) {\n        this.dpr = dpr;\n    };\n    PathProxy.prototype.setContext = function (ctx) {\n        this._ctx = ctx;\n    };\n    PathProxy.prototype.getContext = function () {\n        return this._ctx;\n    };\n    PathProxy.prototype.beginPath = function () {\n        this._ctx && this._ctx.beginPath();\n        this.reset();\n        return this;\n    };\n    PathProxy.prototype.reset = function () {\n        if (this._saveData) {\n            this._len = 0;\n        }\n        if (this._lineDash) {\n            this._lineDash = null;\n            this._dashOffset = 0;\n        }\n        if (this._pathSegLen) {\n            this._pathSegLen = null;\n            this._pathLen = 0;\n        }\n        this._version++;\n    };\n    PathProxy.prototype.moveTo = function (x, y) {\n        this._drawPendingPt();\n        this.addData(CMD.M, x, y);\n        this._ctx && this._ctx.moveTo(x, y);\n        this._x0 = x;\n        this._y0 = y;\n        this._xi = x;\n        this._yi = y;\n        return this;\n    };\n    PathProxy.prototype.lineTo = function (x, y) {\n        var dx = mathAbs(x - this._xi);\n        var dy = mathAbs(y - this._yi);\n        var exceedUnit = dx > this._ux || dy > this._uy;\n        this.addData(CMD.L, x, y);\n        if (this._ctx && exceedUnit) {\n            this._needsDash ? this._dashedLineTo(x, y)\n                : this._ctx.lineTo(x, y);\n        }\n        if (exceedUnit) {\n            this._xi = x;\n            this._yi = y;\n            this._pendingPtDist = 0;\n        }\n        else {\n            var d2 = dx * dx + dy * dy;\n            if (d2 > this._pendingPtDist) {\n                this._pendingPtX = x;\n                this._pendingPtY = y;\n                this._pendingPtDist = d2;\n            }\n        }\n        return this;\n    };\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n        this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n        if (this._ctx) {\n            this._needsDash ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n        }\n        this._xi = x3;\n        this._yi = y3;\n        return this;\n    };\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n        this.addData(CMD.Q, x1, y1, x2, y2);\n        if (this._ctx) {\n            this._needsDash ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n        }\n        this._xi = x2;\n        this._yi = y2;\n        return this;\n    };\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        tmpAngles[0] = startAngle;\n        tmpAngles[1] = endAngle;\n        normalizeArcAngles(tmpAngles, anticlockwise);\n        startAngle = tmpAngles[0];\n        endAngle = tmpAngles[1];\n        var delta = endAngle - startAngle;\n        this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n        this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n        this._xi = mathCos(endAngle) * r + cx;\n        this._yi = mathSin(endAngle) * r + cy;\n        return this;\n    };\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n        if (this._ctx) {\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\n        }\n        return this;\n    };\n    PathProxy.prototype.rect = function (x, y, w, h) {\n        this._ctx && this._ctx.rect(x, y, w, h);\n        this.addData(CMD.R, x, y, w, h);\n        return this;\n    };\n    PathProxy.prototype.closePath = function () {\n        this._drawPendingPt();\n        this.addData(CMD.Z);\n        var ctx = this._ctx;\n        var x0 = this._x0;\n        var y0 = this._y0;\n        if (ctx) {\n            this._needsDash && this._dashedLineTo(x0, y0);\n            ctx.closePath();\n        }\n        this._xi = x0;\n        this._yi = y0;\n        return this;\n    };\n    PathProxy.prototype.fill = function (ctx) {\n        ctx && ctx.fill();\n        this.toStatic();\n    };\n    PathProxy.prototype.stroke = function (ctx) {\n        ctx && ctx.stroke();\n        this.toStatic();\n    };\n    PathProxy.prototype.setLineDash = function (lineDash) {\n        if (lineDash instanceof Array) {\n            this._lineDash = lineDash;\n            this._dashIdx = 0;\n            var lineDashSum = 0;\n            for (var i = 0; i < lineDash.length; i++) {\n                lineDashSum += lineDash[i];\n            }\n            this._dashSum = lineDashSum;\n            this._needsDash = true;\n        }\n        else {\n            this._lineDash = null;\n            this._needsDash = false;\n        }\n        return this;\n    };\n    PathProxy.prototype.setLineDashOffset = function (offset) {\n        this._dashOffset = offset;\n        return this;\n    };\n    PathProxy.prototype.len = function () {\n        return this._len;\n    };\n    PathProxy.prototype.setData = function (data) {\n        var len = data.length;\n        if (!(this.data && this.data.length === len) && hasTypedArray) {\n            this.data = new Float32Array(len);\n        }\n        for (var i = 0; i < len; i++) {\n            this.data[i] = data[i];\n        }\n        this._len = len;\n    };\n    PathProxy.prototype.appendPath = function (path) {\n        if (!(path instanceof Array)) {\n            path = [path];\n        }\n        var len = path.length;\n        var appendSize = 0;\n        var offset = this._len;\n        for (var i = 0; i < len; i++) {\n            appendSize += path[i].len();\n        }\n        if (hasTypedArray && (this.data instanceof Float32Array)) {\n            this.data = new Float32Array(offset + appendSize);\n        }\n        for (var i = 0; i < len; i++) {\n            var appendPathData = path[i].data;\n            for (var k = 0; k < appendPathData.length; k++) {\n                this.data[offset++] = appendPathData[k];\n            }\n        }\n        this._len = offset;\n    };\n    PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n        if (!this._saveData) {\n            return;\n        }\n        var data = this.data;\n        if (this._len + arguments.length > data.length) {\n            this._expandData();\n            data = this.data;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            data[this._len++] = arguments[i];\n        }\n    };\n    PathProxy.prototype._drawPendingPt = function () {\n        if (this._pendingPtDist > 0) {\n            this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY);\n            this._pendingPtDist = 0;\n        }\n    };\n    PathProxy.prototype._expandData = function () {\n        if (!(this.data instanceof Array)) {\n            var newData = [];\n            for (var i = 0; i < this._len; i++) {\n                newData[i] = this.data[i];\n            }\n            this.data = newData;\n        }\n    };\n    PathProxy.prototype._dashedLineTo = function (x1, y1) {\n        var dashSum = this._dashSum;\n        var lineDash = this._lineDash;\n        var ctx = this._ctx;\n        var offset = this._dashOffset;\n        var x0 = this._xi;\n        var y0 = this._yi;\n        var dx = x1 - x0;\n        var dy = y1 - y0;\n        var dist = mathSqrt(dx * dx + dy * dy);\n        var x = x0;\n        var y = y0;\n        var nDash = lineDash.length;\n        var dash;\n        var idx;\n        dx /= dist;\n        dy /= dist;\n        if (offset < 0) {\n            offset = dashSum + offset;\n        }\n        offset %= dashSum;\n        x -= offset * dx;\n        y -= offset * dy;\n        while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx === 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n            idx = this._dashIdx;\n            dash = lineDash[idx];\n            x += dx * dash;\n            y += dy * dash;\n            this._dashIdx = (idx + 1) % nDash;\n            if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                continue;\n            }\n            ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n        }\n        dx = x - x1;\n        dy = y - y1;\n        this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n    };\n    PathProxy.prototype._dashedBezierTo = function (x1, y1, x2, y2, x3, y3) {\n        var ctx = this._ctx;\n        var dashSum = this._dashSum;\n        var offset = this._dashOffset;\n        var lineDash = this._lineDash;\n        var x0 = this._xi;\n        var y0 = this._yi;\n        var bezierLen = 0;\n        var idx = this._dashIdx;\n        var nDash = lineDash.length;\n        var t;\n        var dx;\n        var dy;\n        var x;\n        var y;\n        var tmpLen = 0;\n        if (offset < 0) {\n            offset = dashSum + offset;\n        }\n        offset %= dashSum;\n        for (t = 0; t < 1; t += 0.1) {\n            dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                - cubicAt(x0, x1, x2, x3, t);\n            dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                - cubicAt(y0, y1, y2, y3, t);\n            bezierLen += mathSqrt(dx * dx + dy * dy);\n        }\n        for (; idx < nDash; idx++) {\n            tmpLen += lineDash[idx];\n            if (tmpLen > offset) {\n                break;\n            }\n        }\n        t = (tmpLen - offset) / bezierLen;\n        while (t <= 1) {\n            x = cubicAt(x0, x1, x2, x3, t);\n            y = cubicAt(y0, y1, y2, y3, t);\n            idx % 2 ? ctx.moveTo(x, y)\n                : ctx.lineTo(x, y);\n            t += lineDash[idx] / bezierLen;\n            idx = (idx + 1) % nDash;\n        }\n        (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n        dx = x3 - x;\n        dy = y3 - y;\n        this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n    };\n    PathProxy.prototype._dashedQuadraticTo = function (x1, y1, x2, y2) {\n        var x3 = x2;\n        var y3 = y2;\n        x2 = (x2 + 2 * x1) / 3;\n        y2 = (y2 + 2 * y1) / 3;\n        x1 = (this._xi + 2 * x1) / 3;\n        y1 = (this._yi + 2 * y1) / 3;\n        this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n    };\n    PathProxy.prototype.toStatic = function () {\n        if (!this._saveData) {\n            return;\n        }\n        this._drawPendingPt();\n        var data = this.data;\n        if (data instanceof Array) {\n            data.length = this._len;\n            if (hasTypedArray && this._len > 11) {\n                this.data = new Float32Array(data);\n            }\n        }\n    };\n    PathProxy.prototype.getBoundingRect = function () {\n        min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n        max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n        var data = this.data;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        var i;\n        for (i = 0; i < this._len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    min2[0] = x0;\n                    min2[1] = y0;\n                    max2[0] = x0;\n                    max2[1] = y0;\n                    break;\n                case CMD.L:\n                    fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var endAngle = data[i++] + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                    break;\n                case CMD.Z:\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n            vec2.min(min, min, min2);\n            vec2.max(max, max, max2);\n        }\n        if (i === 0) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    };\n    PathProxy.prototype._calculateLength = function () {\n        var data = this.data;\n        var len = this._len;\n        var ux = this._ux;\n        var uy = this._uy;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        if (!this._pathSegLen) {\n            this._pathSegLen = [];\n        }\n        var pathSegLen = this._pathSegLen;\n        var pathTotalLen = 0;\n        var segCount = 0;\n        for (var i = 0; i < len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            var l = -1;\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    break;\n                case CMD.L: {\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var dx = x2 - xi;\n                    var dy = y2 - yi;\n                    if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n                        l = Math.sqrt(dx * dx + dy * dy);\n                        xi = x2;\n                        yi = y2;\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var x3 = data[i++];\n                    var y3 = data[i++];\n                    l = cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    l = quadraticLength(xi, yi, x1, y1, x2, y2, 10);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var delta = data[i++];\n                    var endAngle = delta + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R: {\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    l = width * 2 + height * 2;\n                    break;\n                }\n                case CMD.Z: {\n                    var dx = x0 - xi;\n                    var dy = y0 - yi;\n                    l = Math.sqrt(dx * dx + dy * dy);\n                    xi = x0;\n                    yi = y0;\n                    break;\n                }\n            }\n            if (l >= 0) {\n                pathSegLen[segCount++] = l;\n                pathTotalLen += l;\n            }\n        }\n        this._pathLen = pathTotalLen;\n        return pathTotalLen;\n    };\n    PathProxy.prototype.rebuildPath = function (ctx, percent) {\n        var d = this.data;\n        var ux = this._ux;\n        var uy = this._uy;\n        var len = this._len;\n        var x0;\n        var y0;\n        var xi;\n        var yi;\n        var x;\n        var y;\n        var drawPart = percent < 1;\n        var pathSegLen;\n        var pathTotalLen;\n        var accumLength = 0;\n        var segCount = 0;\n        var displayedLength;\n        var pendingPtDist = 0;\n        var pendingPtX;\n        var pendingPtY;\n        if (drawPart) {\n            if (!this._pathSegLen) {\n                this._calculateLength();\n            }\n            pathSegLen = this._pathSegLen;\n            pathTotalLen = this._pathLen;\n            displayedLength = percent * pathTotalLen;\n            if (!displayedLength) {\n                return;\n            }\n        }\n        lo: for (var i = 0; i < len;) {\n            var cmd = d[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = d[i];\n                yi = d[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    if (pendingPtDist > 0) {\n                        ctx.lineTo(pendingPtX, pendingPtY);\n                        pendingPtDist = 0;\n                    }\n                    x0 = xi = d[i++];\n                    y0 = yi = d[i++];\n                    ctx.moveTo(xi, yi);\n                    break;\n                case CMD.L: {\n                    x = d[i++];\n                    y = d[i++];\n                    var dx = mathAbs(x - xi);\n                    var dy = mathAbs(y - yi);\n                    if (dx > ux || dy > uy) {\n                        if (drawPart) {\n                            var l = pathSegLen[segCount++];\n                            if (accumLength + l > displayedLength) {\n                                var t = (displayedLength - accumLength) / l;\n                                ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                                break lo;\n                            }\n                            accumLength += l;\n                        }\n                        ctx.lineTo(x, y);\n                        xi = x;\n                        yi = y;\n                        pendingPtDist = 0;\n                    }\n                    else {\n                        var d2 = dx * dx + dy * dy;\n                        if (d2 > pendingPtDist) {\n                            pendingPtX = x;\n                            pendingPtY = y;\n                            pendingPtDist = d2;\n                        }\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    var x3 = d[i++];\n                    var y3 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\n                            cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\n                            ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            quadraticSubdivide(xi, x1, x2, t, tmpOutX);\n                            quadraticSubdivide(yi, y1, y2, t, tmpOutY);\n                            ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.quadraticCurveTo(x1, y1, x2, y2);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = d[i++];\n                    var cy = d[i++];\n                    var rx = d[i++];\n                    var ry = d[i++];\n                    var startAngle = d[i++];\n                    var delta = d[i++];\n                    var psi = d[i++];\n                    var anticlockwise = !d[i++];\n                    var r = (rx > ry) ? rx : ry;\n                    var scaleX = (rx > ry) ? 1 : rx / ry;\n                    var scaleY = (rx > ry) ? ry / rx : 1;\n                    var isEllipse = mathAbs(rx - ry) > 1e-3;\n                    var endAngle = startAngle + delta;\n                    var breakBuild = false;\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n                            breakBuild = true;\n                        }\n                        accumLength += l;\n                    }\n                    if (isEllipse && ctx.ellipse) {\n                        ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n                    }\n                    else {\n                        ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n                    }\n                    if (breakBuild) {\n                        break lo;\n                    }\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = d[i];\n                    y0 = yi = d[i + 1];\n                    x = d[i++];\n                    y = d[i++];\n                    var width = d[i++];\n                    var height = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var d_1 = displayedLength - accumLength;\n                            ctx.moveTo(x, y);\n                            ctx.lineTo(x + mathMin(d_1, width), y);\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + width, y + mathMin(d_1, height));\n                            }\n                            d_1 -= height;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n                            }\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n                            }\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.rect(x, y, width, height);\n                    break;\n                case CMD.Z:\n                    if (pendingPtDist > 0) {\n                        ctx.lineTo(pendingPtX, pendingPtY);\n                        pendingPtDist = 0;\n                    }\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.closePath();\n                    xi = x0;\n                    yi = y0;\n            }\n        }\n    };\n    PathProxy.CMD = CMD;\n    PathProxy.initDefaultProps = (function () {\n        var proto = PathProxy.prototype;\n        proto._saveData = true;\n        proto._needsDash = false;\n        proto._dashOffset = 0;\n        proto._dashIdx = 0;\n        proto._dashSum = 0;\n        proto._ux = 0;\n        proto._uy = 0;\n        proto._pendingPtDist = 0;\n        proto._version = 0;\n    })();\n    return PathProxy;\n}());\nexport default PathProxy;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}