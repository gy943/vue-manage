{"ast":null,"code":"import Clip from './Clip';\nimport * as color from '../tool/color';\nimport { isArrayLike, keys, logError } from '../core/util';\nvar arraySlice = Array.prototype.slice;\nexport function interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\nexport function step(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\nexport function interpolate1DArray(out, p0, p1, percent) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = interpolateNumber(p0[i], p1[i], percent);\n  }\n}\nexport function interpolate2DArray(out, p0, p1, percent) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n    }\n  }\n}\n\nfunction add1DArray(out, p0, p1, sign) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = p0[i] + p1[i] * sign;\n  }\n\n  return out;\n}\n\nfunction add2DArray(out, p0, p1, sign) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = p0[i][j] + p1[i][j] * sign;\n    }\n  }\n\n  return out;\n}\n\nfunction fillArray(val0, val1, arrDim) {\n  var arr0 = val0;\n  var arr1 = val1;\n\n  if (!arr0.push || !arr1.push) {\n    return;\n  }\n\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      arr0.length = arr1Len;\n    } else {\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  }\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n\nfunction is1DArraySame(arr0, arr1) {\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (arr0[i] !== arr1[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction is2DArraySame(arr0, arr1) {\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  var len2 = arr0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    for (var j = 0; j < len2; j++) {\n      if (arr0[i][j] !== arr1[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n  }\n}\n\nfunction catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\n  var len = p0.length;\n  var len2 = p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[1] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n    }\n  }\n}\n\nexport function cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction guessArrayDim(value) {\n  return isArrayLike(value && value[0]) ? 2 : 1;\n}\n\nvar tmpRgba = [0, 0, 0, 0];\n\nvar Track = function () {\n  function Track(propName) {\n    this.keyframes = [];\n    this.maxTime = 0;\n    this.arrDim = 0;\n    this.interpolable = true;\n    this._needsSort = false;\n    this._isAllValueEqual = true;\n    this._lastFrame = 0;\n    this._lastFramePercent = 0;\n    this.propName = propName;\n  }\n\n  Track.prototype.isFinished = function () {\n    return this._finished;\n  };\n\n  Track.prototype.setFinished = function () {\n    this._finished = true;\n\n    if (this._additiveTrack) {\n      this._additiveTrack.setFinished();\n    }\n  };\n\n  Track.prototype.needsAnimate = function () {\n    return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\n  };\n\n  Track.prototype.getAdditiveTrack = function () {\n    return this._additiveTrack;\n  };\n\n  Track.prototype.addKeyframe = function (time, value) {\n    if (time >= this.maxTime) {\n      this.maxTime = time;\n    } else {\n      this._needsSort = true;\n    }\n\n    var keyframes = this.keyframes;\n    var len = keyframes.length;\n\n    if (this.interpolable) {\n      if (isArrayLike(value)) {\n        var arrayDim = guessArrayDim(value);\n\n        if (len > 0 && this.arrDim !== arrayDim) {\n          this.interpolable = false;\n          return;\n        }\n\n        if (arrayDim === 1 && typeof value[0] !== 'number' || arrayDim === 2 && typeof value[0][0] !== 'number') {\n          this.interpolable = false;\n          return;\n        }\n\n        if (len > 0) {\n          var lastFrame = keyframes[len - 1];\n\n          if (this._isAllValueEqual) {\n            if (arrayDim === 1) {\n              if (!is1DArraySame(value, lastFrame.value)) {\n                this._isAllValueEqual = false;\n              }\n            } else {\n              this._isAllValueEqual = false;\n            }\n          }\n        }\n\n        this.arrDim = arrayDim;\n      } else {\n        if (this.arrDim > 0) {\n          this.interpolable = false;\n          return;\n        }\n\n        if (typeof value === 'string') {\n          var colorArray = color.parse(value);\n\n          if (colorArray) {\n            value = colorArray;\n            this.isValueColor = true;\n          } else {\n            this.interpolable = false;\n          }\n        } else if (typeof value !== 'number' || isNaN(value)) {\n          this.interpolable = false;\n          return;\n        }\n\n        if (this._isAllValueEqual && len > 0) {\n          var lastFrame = keyframes[len - 1];\n\n          if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\n            this._isAllValueEqual = false;\n          } else if (lastFrame.value !== value) {\n            this._isAllValueEqual = false;\n          }\n        }\n      }\n    }\n\n    var kf = {\n      time: time,\n      value: value,\n      percent: 0\n    };\n    this.keyframes.push(kf);\n    return kf;\n  };\n\n  Track.prototype.prepare = function (additiveTrack) {\n    var kfs = this.keyframes;\n\n    if (this._needsSort) {\n      kfs.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n\n    var arrDim = this.arrDim;\n    var kfsLen = kfs.length;\n    var lastKf = kfs[kfsLen - 1];\n\n    for (var i = 0; i < kfsLen; i++) {\n      kfs[i].percent = kfs[i].time / this.maxTime;\n\n      if (arrDim > 0 && i !== kfsLen - 1) {\n        fillArray(kfs[i].value, lastKf.value, arrDim);\n      }\n    }\n\n    if (additiveTrack && this.needsAnimate() && additiveTrack.needsAnimate() && arrDim === additiveTrack.arrDim && this.isValueColor === additiveTrack.isValueColor && !additiveTrack._finished) {\n      this._additiveTrack = additiveTrack;\n      var startValue = kfs[0].value;\n\n      for (var i = 0; i < kfsLen; i++) {\n        if (arrDim === 0) {\n          if (this.isValueColor) {\n            kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n          } else {\n            kfs[i].additiveValue = kfs[i].value - startValue;\n          }\n        } else if (arrDim === 1) {\n          kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n        } else if (arrDim === 2) {\n          kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\n        }\n      }\n    }\n  };\n\n  Track.prototype.step = function (target, percent) {\n    if (this._finished) {\n      return;\n    }\n\n    if (this._additiveTrack && this._additiveTrack._finished) {\n      this._additiveTrack = null;\n    }\n\n    var isAdditive = this._additiveTrack != null;\n    var valueKey = isAdditive ? 'additiveValue' : 'value';\n    var keyframes = this.keyframes;\n    var kfsNum = this.keyframes.length;\n    var propName = this.propName;\n    var arrDim = this.arrDim;\n    var isValueColor = this.isValueColor;\n    var frameIdx;\n\n    if (percent < 0) {\n      frameIdx = 0;\n    } else if (percent < this._lastFramePercent) {\n      var start = Math.min(this._lastFrame + 1, kfsNum - 1);\n\n      for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n        if (keyframes[frameIdx].percent <= percent) {\n          break;\n        }\n      }\n\n      frameIdx = Math.min(frameIdx, kfsNum - 2);\n    } else {\n      for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\n        if (keyframes[frameIdx].percent > percent) {\n          break;\n        }\n      }\n\n      frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\n    }\n\n    var nextFrame = keyframes[frameIdx + 1];\n    var frame = keyframes[frameIdx];\n\n    if (!(frame && nextFrame)) {\n      return;\n    }\n\n    this._lastFrame = frameIdx;\n    this._lastFramePercent = percent;\n    var range = nextFrame.percent - frame.percent;\n\n    if (range === 0) {\n      return;\n    }\n\n    var w = (percent - frame.percent) / range;\n    var targetArr = isAdditive ? this._additiveValue : isValueColor ? tmpRgba : target[propName];\n\n    if ((arrDim > 0 || isValueColor) && !targetArr) {\n      targetArr = this._additiveValue = [];\n    }\n\n    if (this.useSpline) {\n      var p1 = keyframes[frameIdx][valueKey];\n      var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\n      var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\n      var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\n\n      if (arrDim > 0) {\n        arrDim === 1 ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w) : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n      } else if (isValueColor) {\n        catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n\n        if (!isAdditive) {\n          target[propName] = rgba2String(targetArr);\n        }\n      } else {\n        var value = void 0;\n\n        if (!this.interpolable) {\n          value = p2;\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        if (isAdditive) {\n          this._additiveValue = value;\n        } else {\n          target[propName] = value;\n        }\n      }\n    } else {\n      if (arrDim > 0) {\n        arrDim === 1 ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w) : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n      } else if (isValueColor) {\n        interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n\n        if (!isAdditive) {\n          target[propName] = rgba2String(targetArr);\n        }\n      } else {\n        var value = void 0;\n\n        if (!this.interpolable) {\n          value = step(frame[valueKey], nextFrame[valueKey], w);\n        } else {\n          value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n        }\n\n        if (isAdditive) {\n          this._additiveValue = value;\n        } else {\n          target[propName] = value;\n        }\n      }\n    }\n\n    if (isAdditive) {\n      this._addToTarget(target);\n    }\n  };\n\n  Track.prototype._addToTarget = function (target) {\n    var arrDim = this.arrDim;\n    var propName = this.propName;\n    var additiveValue = this._additiveValue;\n\n    if (arrDim === 0) {\n      if (this.isValueColor) {\n        color.parse(target[propName], tmpRgba);\n        add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n        target[propName] = rgba2String(tmpRgba);\n      } else {\n        target[propName] = target[propName] + additiveValue;\n      }\n    } else if (arrDim === 1) {\n      add1DArray(target[propName], target[propName], additiveValue, 1);\n    } else if (arrDim === 2) {\n      add2DArray(target[propName], target[propName], additiveValue, 1);\n    }\n  };\n\n  return Track;\n}();\n\nvar Animator = function () {\n  function Animator(target, loop, additiveTo) {\n    this._tracks = {};\n    this._trackKeys = [];\n    this._delay = 0;\n    this._maxTime = 0;\n    this._paused = false;\n    this._started = 0;\n    this._clip = null;\n    this._target = target;\n    this._loop = loop;\n\n    if (loop && additiveTo) {\n      logError('Can\\' use additive animation on looped animation.');\n      return;\n    }\n\n    this._additiveAnimators = additiveTo;\n  }\n\n  Animator.prototype.getTarget = function () {\n    return this._target;\n  };\n\n  Animator.prototype.changeTarget = function (target) {\n    this._target = target;\n  };\n\n  Animator.prototype.when = function (time, props) {\n    return this.whenWithKeys(time, props, keys(props));\n  };\n\n  Animator.prototype.whenWithKeys = function (time, props, propNames) {\n    var tracks = this._tracks;\n\n    for (var i = 0; i < propNames.length; i++) {\n      var propName = propNames[i];\n      var track = tracks[propName];\n\n      if (!track) {\n        track = tracks[propName] = new Track(propName);\n        var initialValue = void 0;\n\n        var additiveTrack = this._getAdditiveTrack(propName);\n\n        if (additiveTrack) {\n          var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\n          initialValue = lastFinalKf && lastFinalKf.value;\n\n          if (additiveTrack.isValueColor && initialValue) {\n            initialValue = rgba2String(initialValue);\n          }\n        } else {\n          initialValue = this._target[propName];\n        }\n\n        if (initialValue == null) {\n          continue;\n        }\n\n        if (time !== 0) {\n          track.addKeyframe(0, cloneValue(initialValue));\n        }\n\n        this._trackKeys.push(propName);\n      }\n\n      track.addKeyframe(time, cloneValue(props[propName]));\n    }\n\n    this._maxTime = Math.max(this._maxTime, time);\n    return this;\n  };\n\n  Animator.prototype.pause = function () {\n    this._clip.pause();\n\n    this._paused = true;\n  };\n\n  Animator.prototype.resume = function () {\n    this._clip.resume();\n\n    this._paused = false;\n  };\n\n  Animator.prototype.isPaused = function () {\n    return !!this._paused;\n  };\n\n  Animator.prototype._doneCallback = function () {\n    this._setTracksFinished();\n\n    this._clip = null;\n    var doneList = this._doneList;\n\n    if (doneList) {\n      var len = doneList.length;\n\n      for (var i = 0; i < len; i++) {\n        doneList[i].call(this);\n      }\n    }\n  };\n\n  Animator.prototype._abortedCallback = function () {\n    this._setTracksFinished();\n\n    var animation = this.animation;\n    var abortedList = this._abortedList;\n\n    if (animation) {\n      animation.removeClip(this._clip);\n    }\n\n    this._clip = null;\n\n    if (abortedList) {\n      for (var i = 0; i < abortedList.length; i++) {\n        abortedList[i].call(this);\n      }\n    }\n  };\n\n  Animator.prototype._setTracksFinished = function () {\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n\n    for (var i = 0; i < tracksKeys.length; i++) {\n      tracks[tracksKeys[i]].setFinished();\n    }\n  };\n\n  Animator.prototype._getAdditiveTrack = function (trackName) {\n    var additiveTrack;\n    var additiveAnimators = this._additiveAnimators;\n\n    if (additiveAnimators) {\n      for (var i = 0; i < additiveAnimators.length; i++) {\n        var track = additiveAnimators[i].getTrack(trackName);\n\n        if (track) {\n          additiveTrack = track;\n        }\n      }\n    }\n\n    return additiveTrack;\n  };\n\n  Animator.prototype.start = function (easing, forceAnimate) {\n    if (this._started > 0) {\n      return;\n    }\n\n    this._started = 1;\n    var self = this;\n    var tracks = [];\n\n    for (var i = 0; i < this._trackKeys.length; i++) {\n      var propName = this._trackKeys[i];\n      var track = this._tracks[propName];\n\n      var additiveTrack = this._getAdditiveTrack(propName);\n\n      var kfs = track.keyframes;\n      track.prepare(additiveTrack);\n\n      if (track.needsAnimate()) {\n        tracks.push(track);\n      } else if (!track.interpolable) {\n        var lastKf = kfs[kfs.length - 1];\n\n        if (lastKf) {\n          self._target[track.propName] = lastKf.value;\n        }\n      }\n    }\n\n    if (tracks.length || forceAnimate) {\n      var clip = new Clip({\n        life: this._maxTime,\n        loop: this._loop,\n        delay: this._delay,\n        onframe: function (percent) {\n          self._started = 2;\n          var additiveAnimators = self._additiveAnimators;\n\n          if (additiveAnimators) {\n            var stillHasAdditiveAnimator = false;\n\n            for (var i = 0; i < additiveAnimators.length; i++) {\n              if (additiveAnimators[i]._clip) {\n                stillHasAdditiveAnimator = true;\n                break;\n              }\n            }\n\n            if (!stillHasAdditiveAnimator) {\n              self._additiveAnimators = null;\n            }\n          }\n\n          for (var i = 0; i < tracks.length; i++) {\n            tracks[i].step(self._target, percent);\n          }\n\n          var onframeList = self._onframeList;\n\n          if (onframeList) {\n            for (var i = 0; i < onframeList.length; i++) {\n              onframeList[i](self._target, percent);\n            }\n          }\n        },\n        ondestroy: function () {\n          self._doneCallback();\n        }\n      });\n      this._clip = clip;\n\n      if (this.animation) {\n        this.animation.addClip(clip);\n      }\n\n      if (easing && easing !== 'spline') {\n        clip.easing = easing;\n      }\n    } else {\n      this._doneCallback();\n    }\n\n    return this;\n  };\n\n  Animator.prototype.stop = function (forwardToLast) {\n    if (!this._clip) {\n      return;\n    }\n\n    var clip = this._clip;\n\n    if (forwardToLast) {\n      clip.onframe(1);\n    }\n\n    this._abortedCallback();\n  };\n\n  Animator.prototype.delay = function (time) {\n    this._delay = time;\n    return this;\n  };\n\n  Animator.prototype.during = function (cb) {\n    if (cb) {\n      if (!this._onframeList) {\n        this._onframeList = [];\n      }\n\n      this._onframeList.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.done = function (cb) {\n    if (cb) {\n      if (!this._doneList) {\n        this._doneList = [];\n      }\n\n      this._doneList.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.aborted = function (cb) {\n    if (cb) {\n      if (!this._abortedList) {\n        this._abortedList = [];\n      }\n\n      this._abortedList.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.getClip = function () {\n    return this._clip;\n  };\n\n  Animator.prototype.getTrack = function (propName) {\n    return this._tracks[propName];\n  };\n\n  Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n    if (!propNames.length || !this._clip) {\n      return true;\n    }\n\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n\n    for (var i = 0; i < propNames.length; i++) {\n      var track = tracks[propNames[i]];\n\n      if (track) {\n        if (forwardToLast) {\n          track.step(this._target, 1);\n        } else if (this._started === 1) {\n          track.step(this._target, 0);\n        }\n\n        track.setFinished();\n      }\n    }\n\n    var allAborted = true;\n\n    for (var i = 0; i < tracksKeys.length; i++) {\n      if (!tracks[tracksKeys[i]].isFinished()) {\n        allAborted = false;\n        break;\n      }\n    }\n\n    if (allAborted) {\n      this._abortedCallback();\n    }\n\n    return allAborted;\n  };\n\n  Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\n    if (!target) {\n      return;\n    }\n\n    trackKeys = trackKeys || this._trackKeys;\n\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n\n      if (!track || track.isFinished()) {\n        continue;\n      }\n\n      var kfs = track.keyframes;\n      var lastKf = kfs[kfs.length - 1];\n\n      if (lastKf) {\n        var val = cloneValue(lastKf.value);\n\n        if (track.isValueColor) {\n          val = rgba2String(val);\n        }\n\n        target[propName] = val;\n      }\n    }\n  };\n\n  Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n    trackKeys = trackKeys || keys(finalProps);\n\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n\n      if (!track) {\n        continue;\n      }\n\n      var kfs = track.keyframes;\n\n      if (kfs.length > 1) {\n        var lastKf = kfs.pop();\n        track.addKeyframe(lastKf.time, finalProps[propName]);\n        track.prepare(track.getAdditiveTrack());\n      }\n    }\n  };\n\n  return Animator;\n}();\n\nexport default Animator;","map":{"version":3,"names":["Clip","color","isArrayLike","keys","logError","arraySlice","Array","prototype","slice","interpolateNumber","p0","p1","percent","step","interpolate1DArray","out","len","length","i","interpolate2DArray","len2","j","add1DArray","sign","add2DArray","fillArray","val0","val1","arrDim","arr0","arr1","push","arr0Len","arr1Len","isPreviousLarger","call","isNaN","is1DArraySame","is2DArraySame","catmullRomInterpolate","p2","p3","t","t2","t3","v0","v1","catmullRomInterpolate1DArray","catmullRomInterpolate2DArray","cloneValue","value","ret","rgba2String","rgba","Math","floor","join","guessArrayDim","tmpRgba","Track","propName","keyframes","maxTime","interpolable","_needsSort","_isAllValueEqual","_lastFrame","_lastFramePercent","isFinished","_finished","setFinished","_additiveTrack","needsAnimate","getAdditiveTrack","addKeyframe","time","arrayDim","lastFrame","colorArray","parse","isValueColor","kf","prepare","additiveTrack","kfs","sort","a","b","kfsLen","lastKf","startValue","additiveValue","target","isAdditive","valueKey","kfsNum","frameIdx","start","min","nextFrame","frame","range","w","targetArr","_additiveValue","useSpline","_addToTarget","Animator","loop","additiveTo","_tracks","_trackKeys","_delay","_maxTime","_paused","_started","_clip","_target","_loop","_additiveAnimators","getTarget","changeTarget","when","props","whenWithKeys","propNames","tracks","track","initialValue","_getAdditiveTrack","lastFinalKf","max","pause","resume","isPaused","_doneCallback","_setTracksFinished","doneList","_doneList","_abortedCallback","animation","abortedList","_abortedList","removeClip","tracksKeys","trackName","additiveAnimators","getTrack","easing","forceAnimate","self","clip","life","delay","onframe","stillHasAdditiveAnimator","onframeList","_onframeList","ondestroy","addClip","stop","forwardToLast","during","cb","done","aborted","getClip","stopTracks","allAborted","saveFinalToTarget","trackKeys","val","__changeFinalValue","finalProps","pop"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/zrender/lib/animation/Animator.js"],"sourcesContent":["import Clip from './Clip';\nimport * as color from '../tool/color';\nimport { isArrayLike, keys, logError } from '../core/util';\nvar arraySlice = Array.prototype.slice;\nexport function interpolateNumber(p0, p1, percent) {\n    return (p1 - p0) * percent + p0;\n}\nexport function step(p0, p1, percent) {\n    return percent > 0.5 ? p1 : p0;\n}\nexport function interpolate1DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n}\nexport function interpolate2DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n        }\n    }\n}\nfunction add1DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = p0[i] + p1[i] * sign;\n    }\n    return out;\n}\nfunction add2DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = p0[i][j] + p1[i][j] * sign;\n        }\n    }\n    return out;\n}\nfunction fillArray(val0, val1, arrDim) {\n    var arr0 = val0;\n    var arr1 = val1;\n    if (!arr0.push || !arr1.push) {\n        return;\n    }\n    var arr0Len = arr0.length;\n    var arr1Len = arr1.length;\n    if (arr0Len !== arr1Len) {\n        var isPreviousLarger = arr0Len > arr1Len;\n        if (isPreviousLarger) {\n            arr0.length = arr1Len;\n        }\n        else {\n            for (var i = arr0Len; i < arr1Len; i++) {\n                arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n            }\n        }\n    }\n    var len2 = arr0[0] && arr0[0].length;\n    for (var i = 0; i < arr0.length; i++) {\n        if (arrDim === 1) {\n            if (isNaN(arr0[i])) {\n                arr0[i] = arr1[i];\n            }\n        }\n        else {\n            for (var j = 0; j < len2; j++) {\n                if (isNaN(arr0[i][j])) {\n                    arr0[i][j] = arr1[i][j];\n                }\n            }\n        }\n    }\n}\nfunction is1DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (arr0[i] !== arr1[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction is2DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    var len2 = arr0[0].length;\n    for (var i = 0; i < len; i++) {\n        for (var j = 0; j < len2; j++) {\n            if (arr0[i][j] !== arr1[i][j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3\n        + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n        + v0 * t + p1;\n}\nfunction catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n}\nfunction catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\n    var len = p0.length;\n    var len2 = p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[1] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n        }\n    }\n}\nexport function cloneValue(value) {\n    if (isArrayLike(value)) {\n        var len = value.length;\n        if (isArrayLike(value[0])) {\n            var ret = [];\n            for (var i = 0; i < len; i++) {\n                ret.push(arraySlice.call(value[i]));\n            }\n            return ret;\n        }\n        return arraySlice.call(value);\n    }\n    return value;\n}\nfunction rgba2String(rgba) {\n    rgba[0] = Math.floor(rgba[0]);\n    rgba[1] = Math.floor(rgba[1]);\n    rgba[2] = Math.floor(rgba[2]);\n    return 'rgba(' + rgba.join(',') + ')';\n}\nfunction guessArrayDim(value) {\n    return isArrayLike(value && value[0]) ? 2 : 1;\n}\nvar tmpRgba = [0, 0, 0, 0];\nvar Track = (function () {\n    function Track(propName) {\n        this.keyframes = [];\n        this.maxTime = 0;\n        this.arrDim = 0;\n        this.interpolable = true;\n        this._needsSort = false;\n        this._isAllValueEqual = true;\n        this._lastFrame = 0;\n        this._lastFramePercent = 0;\n        this.propName = propName;\n    }\n    Track.prototype.isFinished = function () {\n        return this._finished;\n    };\n    Track.prototype.setFinished = function () {\n        this._finished = true;\n        if (this._additiveTrack) {\n            this._additiveTrack.setFinished();\n        }\n    };\n    Track.prototype.needsAnimate = function () {\n        return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\n    };\n    Track.prototype.getAdditiveTrack = function () {\n        return this._additiveTrack;\n    };\n    Track.prototype.addKeyframe = function (time, value) {\n        if (time >= this.maxTime) {\n            this.maxTime = time;\n        }\n        else {\n            this._needsSort = true;\n        }\n        var keyframes = this.keyframes;\n        var len = keyframes.length;\n        if (this.interpolable) {\n            if (isArrayLike(value)) {\n                var arrayDim = guessArrayDim(value);\n                if (len > 0 && this.arrDim !== arrayDim) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (arrayDim === 1 && typeof value[0] !== 'number'\n                    || arrayDim === 2 && typeof value[0][0] !== 'number') {\n                    this.interpolable = false;\n                    return;\n                }\n                if (len > 0) {\n                    var lastFrame = keyframes[len - 1];\n                    if (this._isAllValueEqual) {\n                        if (arrayDim === 1) {\n                            if (!is1DArraySame(value, lastFrame.value)) {\n                                this._isAllValueEqual = false;\n                            }\n                        }\n                        else {\n                            this._isAllValueEqual = false;\n                        }\n                    }\n                }\n                this.arrDim = arrayDim;\n            }\n            else {\n                if (this.arrDim > 0) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (typeof value === 'string') {\n                    var colorArray = color.parse(value);\n                    if (colorArray) {\n                        value = colorArray;\n                        this.isValueColor = true;\n                    }\n                    else {\n                        this.interpolable = false;\n                    }\n                }\n                else if (typeof value !== 'number' || isNaN(value)) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (this._isAllValueEqual && len > 0) {\n                    var lastFrame = keyframes[len - 1];\n                    if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\n                        this._isAllValueEqual = false;\n                    }\n                    else if (lastFrame.value !== value) {\n                        this._isAllValueEqual = false;\n                    }\n                }\n            }\n        }\n        var kf = {\n            time: time,\n            value: value,\n            percent: 0\n        };\n        this.keyframes.push(kf);\n        return kf;\n    };\n    Track.prototype.prepare = function (additiveTrack) {\n        var kfs = this.keyframes;\n        if (this._needsSort) {\n            kfs.sort(function (a, b) {\n                return a.time - b.time;\n            });\n        }\n        var arrDim = this.arrDim;\n        var kfsLen = kfs.length;\n        var lastKf = kfs[kfsLen - 1];\n        for (var i = 0; i < kfsLen; i++) {\n            kfs[i].percent = kfs[i].time / this.maxTime;\n            if (arrDim > 0 && i !== kfsLen - 1) {\n                fillArray(kfs[i].value, lastKf.value, arrDim);\n            }\n        }\n        if (additiveTrack\n            && this.needsAnimate()\n            && additiveTrack.needsAnimate()\n            && arrDim === additiveTrack.arrDim\n            && this.isValueColor === additiveTrack.isValueColor\n            && !additiveTrack._finished) {\n            this._additiveTrack = additiveTrack;\n            var startValue = kfs[0].value;\n            for (var i = 0; i < kfsLen; i++) {\n                if (arrDim === 0) {\n                    if (this.isValueColor) {\n                        kfs[i].additiveValue\n                            = add1DArray([], kfs[i].value, startValue, -1);\n                    }\n                    else {\n                        kfs[i].additiveValue = kfs[i].value - startValue;\n                    }\n                }\n                else if (arrDim === 1) {\n                    kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n                }\n                else if (arrDim === 2) {\n                    kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\n                }\n            }\n        }\n    };\n    Track.prototype.step = function (target, percent) {\n        if (this._finished) {\n            return;\n        }\n        if (this._additiveTrack && this._additiveTrack._finished) {\n            this._additiveTrack = null;\n        }\n        var isAdditive = this._additiveTrack != null;\n        var valueKey = isAdditive ? 'additiveValue' : 'value';\n        var keyframes = this.keyframes;\n        var kfsNum = this.keyframes.length;\n        var propName = this.propName;\n        var arrDim = this.arrDim;\n        var isValueColor = this.isValueColor;\n        var frameIdx;\n        if (percent < 0) {\n            frameIdx = 0;\n        }\n        else if (percent < this._lastFramePercent) {\n            var start = Math.min(this._lastFrame + 1, kfsNum - 1);\n            for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n                if (keyframes[frameIdx].percent <= percent) {\n                    break;\n                }\n            }\n            frameIdx = Math.min(frameIdx, kfsNum - 2);\n        }\n        else {\n            for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\n                if (keyframes[frameIdx].percent > percent) {\n                    break;\n                }\n            }\n            frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\n        }\n        var nextFrame = keyframes[frameIdx + 1];\n        var frame = keyframes[frameIdx];\n        if (!(frame && nextFrame)) {\n            return;\n        }\n        this._lastFrame = frameIdx;\n        this._lastFramePercent = percent;\n        var range = (nextFrame.percent - frame.percent);\n        if (range === 0) {\n            return;\n        }\n        var w = (percent - frame.percent) / range;\n        var targetArr = isAdditive ? this._additiveValue\n            : (isValueColor ? tmpRgba : target[propName]);\n        if ((arrDim > 0 || isValueColor) && !targetArr) {\n            targetArr = this._additiveValue = [];\n        }\n        if (this.useSpline) {\n            var p1 = keyframes[frameIdx][valueKey];\n            var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\n            var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\n            var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\n            if (arrDim > 0) {\n                arrDim === 1\n                    ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w)\n                    : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n            }\n            else if (isValueColor) {\n                catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n                if (!isAdditive) {\n                    target[propName] = rgba2String(targetArr);\n                }\n            }\n            else {\n                var value = void 0;\n                if (!this.interpolable) {\n                    value = p2;\n                }\n                else {\n                    value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n                }\n                if (isAdditive) {\n                    this._additiveValue = value;\n                }\n                else {\n                    target[propName] = value;\n                }\n            }\n        }\n        else {\n            if (arrDim > 0) {\n                arrDim === 1\n                    ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w)\n                    : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n            }\n            else if (isValueColor) {\n                interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n                if (!isAdditive) {\n                    target[propName] = rgba2String(targetArr);\n                }\n            }\n            else {\n                var value = void 0;\n                if (!this.interpolable) {\n                    value = step(frame[valueKey], nextFrame[valueKey], w);\n                }\n                else {\n                    value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n                }\n                if (isAdditive) {\n                    this._additiveValue = value;\n                }\n                else {\n                    target[propName] = value;\n                }\n            }\n        }\n        if (isAdditive) {\n            this._addToTarget(target);\n        }\n    };\n    Track.prototype._addToTarget = function (target) {\n        var arrDim = this.arrDim;\n        var propName = this.propName;\n        var additiveValue = this._additiveValue;\n        if (arrDim === 0) {\n            if (this.isValueColor) {\n                color.parse(target[propName], tmpRgba);\n                add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n                target[propName] = rgba2String(tmpRgba);\n            }\n            else {\n                target[propName] = target[propName] + additiveValue;\n            }\n        }\n        else if (arrDim === 1) {\n            add1DArray(target[propName], target[propName], additiveValue, 1);\n        }\n        else if (arrDim === 2) {\n            add2DArray(target[propName], target[propName], additiveValue, 1);\n        }\n    };\n    return Track;\n}());\nvar Animator = (function () {\n    function Animator(target, loop, additiveTo) {\n        this._tracks = {};\n        this._trackKeys = [];\n        this._delay = 0;\n        this._maxTime = 0;\n        this._paused = false;\n        this._started = 0;\n        this._clip = null;\n        this._target = target;\n        this._loop = loop;\n        if (loop && additiveTo) {\n            logError('Can\\' use additive animation on looped animation.');\n            return;\n        }\n        this._additiveAnimators = additiveTo;\n    }\n    Animator.prototype.getTarget = function () {\n        return this._target;\n    };\n    Animator.prototype.changeTarget = function (target) {\n        this._target = target;\n    };\n    Animator.prototype.when = function (time, props) {\n        return this.whenWithKeys(time, props, keys(props));\n    };\n    Animator.prototype.whenWithKeys = function (time, props, propNames) {\n        var tracks = this._tracks;\n        for (var i = 0; i < propNames.length; i++) {\n            var propName = propNames[i];\n            var track = tracks[propName];\n            if (!track) {\n                track = tracks[propName] = new Track(propName);\n                var initialValue = void 0;\n                var additiveTrack = this._getAdditiveTrack(propName);\n                if (additiveTrack) {\n                    var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\n                    initialValue = lastFinalKf && lastFinalKf.value;\n                    if (additiveTrack.isValueColor && initialValue) {\n                        initialValue = rgba2String(initialValue);\n                    }\n                }\n                else {\n                    initialValue = this._target[propName];\n                }\n                if (initialValue == null) {\n                    continue;\n                }\n                if (time !== 0) {\n                    track.addKeyframe(0, cloneValue(initialValue));\n                }\n                this._trackKeys.push(propName);\n            }\n            track.addKeyframe(time, cloneValue(props[propName]));\n        }\n        this._maxTime = Math.max(this._maxTime, time);\n        return this;\n    };\n    Animator.prototype.pause = function () {\n        this._clip.pause();\n        this._paused = true;\n    };\n    Animator.prototype.resume = function () {\n        this._clip.resume();\n        this._paused = false;\n    };\n    Animator.prototype.isPaused = function () {\n        return !!this._paused;\n    };\n    Animator.prototype._doneCallback = function () {\n        this._setTracksFinished();\n        this._clip = null;\n        var doneList = this._doneList;\n        if (doneList) {\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._abortedCallback = function () {\n        this._setTracksFinished();\n        var animation = this.animation;\n        var abortedList = this._abortedList;\n        if (animation) {\n            animation.removeClip(this._clip);\n        }\n        this._clip = null;\n        if (abortedList) {\n            for (var i = 0; i < abortedList.length; i++) {\n                abortedList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._setTracksFinished = function () {\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            tracks[tracksKeys[i]].setFinished();\n        }\n    };\n    Animator.prototype._getAdditiveTrack = function (trackName) {\n        var additiveTrack;\n        var additiveAnimators = this._additiveAnimators;\n        if (additiveAnimators) {\n            for (var i = 0; i < additiveAnimators.length; i++) {\n                var track = additiveAnimators[i].getTrack(trackName);\n                if (track) {\n                    additiveTrack = track;\n                }\n            }\n        }\n        return additiveTrack;\n    };\n    Animator.prototype.start = function (easing, forceAnimate) {\n        if (this._started > 0) {\n            return;\n        }\n        this._started = 1;\n        var self = this;\n        var tracks = [];\n        for (var i = 0; i < this._trackKeys.length; i++) {\n            var propName = this._trackKeys[i];\n            var track = this._tracks[propName];\n            var additiveTrack = this._getAdditiveTrack(propName);\n            var kfs = track.keyframes;\n            track.prepare(additiveTrack);\n            if (track.needsAnimate()) {\n                tracks.push(track);\n            }\n            else if (!track.interpolable) {\n                var lastKf = kfs[kfs.length - 1];\n                if (lastKf) {\n                    self._target[track.propName] = lastKf.value;\n                }\n            }\n        }\n        if (tracks.length || forceAnimate) {\n            var clip = new Clip({\n                life: this._maxTime,\n                loop: this._loop,\n                delay: this._delay,\n                onframe: function (percent) {\n                    self._started = 2;\n                    var additiveAnimators = self._additiveAnimators;\n                    if (additiveAnimators) {\n                        var stillHasAdditiveAnimator = false;\n                        for (var i = 0; i < additiveAnimators.length; i++) {\n                            if (additiveAnimators[i]._clip) {\n                                stillHasAdditiveAnimator = true;\n                                break;\n                            }\n                        }\n                        if (!stillHasAdditiveAnimator) {\n                            self._additiveAnimators = null;\n                        }\n                    }\n                    for (var i = 0; i < tracks.length; i++) {\n                        tracks[i].step(self._target, percent);\n                    }\n                    var onframeList = self._onframeList;\n                    if (onframeList) {\n                        for (var i = 0; i < onframeList.length; i++) {\n                            onframeList[i](self._target, percent);\n                        }\n                    }\n                },\n                ondestroy: function () {\n                    self._doneCallback();\n                }\n            });\n            this._clip = clip;\n            if (this.animation) {\n                this.animation.addClip(clip);\n            }\n            if (easing && easing !== 'spline') {\n                clip.easing = easing;\n            }\n        }\n        else {\n            this._doneCallback();\n        }\n        return this;\n    };\n    Animator.prototype.stop = function (forwardToLast) {\n        if (!this._clip) {\n            return;\n        }\n        var clip = this._clip;\n        if (forwardToLast) {\n            clip.onframe(1);\n        }\n        this._abortedCallback();\n    };\n    Animator.prototype.delay = function (time) {\n        this._delay = time;\n        return this;\n    };\n    Animator.prototype.during = function (cb) {\n        if (cb) {\n            if (!this._onframeList) {\n                this._onframeList = [];\n            }\n            this._onframeList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.done = function (cb) {\n        if (cb) {\n            if (!this._doneList) {\n                this._doneList = [];\n            }\n            this._doneList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.aborted = function (cb) {\n        if (cb) {\n            if (!this._abortedList) {\n                this._abortedList = [];\n            }\n            this._abortedList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.getClip = function () {\n        return this._clip;\n    };\n    Animator.prototype.getTrack = function (propName) {\n        return this._tracks[propName];\n    };\n    Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n        if (!propNames.length || !this._clip) {\n            return true;\n        }\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < propNames.length; i++) {\n            var track = tracks[propNames[i]];\n            if (track) {\n                if (forwardToLast) {\n                    track.step(this._target, 1);\n                }\n                else if (this._started === 1) {\n                    track.step(this._target, 0);\n                }\n                track.setFinished();\n            }\n        }\n        var allAborted = true;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            if (!tracks[tracksKeys[i]].isFinished()) {\n                allAborted = false;\n                break;\n            }\n        }\n        if (allAborted) {\n            this._abortedCallback();\n        }\n        return allAborted;\n    };\n    Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\n        if (!target) {\n            return;\n        }\n        trackKeys = trackKeys || this._trackKeys;\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track || track.isFinished()) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            var lastKf = kfs[kfs.length - 1];\n            if (lastKf) {\n                var val = cloneValue(lastKf.value);\n                if (track.isValueColor) {\n                    val = rgba2String(val);\n                }\n                target[propName] = val;\n            }\n        }\n    };\n    Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n        trackKeys = trackKeys || keys(finalProps);\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            if (kfs.length > 1) {\n                var lastKf = kfs.pop();\n                track.addKeyframe(lastKf.time, finalProps[propName]);\n                track.prepare(track.getAdditiveTrack());\n            }\n        }\n    };\n    return Animator;\n}());\nexport default Animator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}