{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport LineGroup from './Line';\nimport { getLabelStatesModels } from '../../label/labelStyle';\n\nvar LineDraw =\n/** @class */\nfunction () {\n  function LineDraw(LineCtor) {\n    this.group = new graphic.Group();\n    this._LineCtor = LineCtor || LineGroup;\n  }\n\n  LineDraw.prototype.isPersistent = function () {\n    return true;\n  };\n\n  ;\n\n  LineDraw.prototype.updateData = function (lineData) {\n    var _this = this;\n\n    var lineDraw = this;\n    var group = lineDraw.group;\n    var oldLineData = lineDraw._lineData;\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!oldLineData) {\n      group.removeAll();\n    }\n\n    var seriesScope = makeSeriesScope(lineData);\n    lineData.diff(oldLineData).add(function (idx) {\n      _this._doAdd(lineData, idx, seriesScope);\n    }).update(function (newIdx, oldIdx) {\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\n    }).remove(function (idx) {\n      group.remove(oldLineData.getItemGraphicEl(idx));\n    }).execute();\n  };\n\n  ;\n\n  LineDraw.prototype.updateLayout = function () {\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n    if (!lineData) {\n      return;\n    }\n\n    lineData.eachItemGraphicEl(function (el, idx) {\n      el.updateLayout(lineData, idx);\n    }, this);\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\n    this._seriesScope = makeSeriesScope(lineData);\n    this._lineData = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup && !isEffectObject(el)) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var itemLayout = lineData.getItemLayout(idx);\n\n      if (lineNeedsDraw(itemLayout)) {\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        this.group.add(el);\n        lineData.setItemGraphicEl(idx, el);\n      }\n    }\n  };\n\n  ;\n\n  LineDraw.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (!lineNeedsDraw(itemLayout)) {\n      return;\n    }\n\n    var el = new this._LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, el);\n    this.group.add(el);\n  };\n\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n      this.group.remove(itemEl);\n      return;\n    }\n\n    if (!itemEl) {\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\n    } else {\n      itemEl.updateData(newLineData, newIdx, seriesScope);\n    }\n\n    newLineData.setItemGraphicEl(newIdx, itemEl);\n    this.group.add(itemEl);\n  };\n\n  return LineDraw;\n}();\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    emphasisLineStyle: hostModel.getModel(['emphasis', 'lineStyle']).getLineStyle(),\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\n    labelStatesModels: getLabelStatesModels(hostModel)\n  };\n}\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nexport default LineDraw;","map":{"version":3,"names":["graphic","LineGroup","getLabelStatesModels","LineDraw","LineCtor","group","Group","_LineCtor","prototype","isPersistent","updateData","lineData","_this","lineDraw","oldLineData","_lineData","removeAll","seriesScope","makeSeriesScope","diff","add","idx","_doAdd","update","newIdx","oldIdx","_doUpdate","remove","getItemGraphicEl","execute","updateLayout","eachItemGraphicEl","el","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","isEffectObject","incremental","ensureState","hoverLayer","start","end","itemLayout","getItemLayout","lineNeedsDraw","traverse","setItemGraphicEl","newLineData","itemEl","animators","length","hostModel","lineStyle","getModel","getLineStyle","emphasisLineStyle","blurLineStyle","selectLineStyle","labelStatesModels","isPointNaN","pt","isNaN","pts"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/chart/helper/LineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport LineGroup from './Line';\nimport { getLabelStatesModels } from '../../label/labelStyle';\n\nvar LineDraw =\n/** @class */\nfunction () {\n  function LineDraw(LineCtor) {\n    this.group = new graphic.Group();\n    this._LineCtor = LineCtor || LineGroup;\n  }\n\n  LineDraw.prototype.isPersistent = function () {\n    return true;\n  };\n\n  ;\n\n  LineDraw.prototype.updateData = function (lineData) {\n    var _this = this;\n\n    var lineDraw = this;\n    var group = lineDraw.group;\n    var oldLineData = lineDraw._lineData;\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!oldLineData) {\n      group.removeAll();\n    }\n\n    var seriesScope = makeSeriesScope(lineData);\n    lineData.diff(oldLineData).add(function (idx) {\n      _this._doAdd(lineData, idx, seriesScope);\n    }).update(function (newIdx, oldIdx) {\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\n    }).remove(function (idx) {\n      group.remove(oldLineData.getItemGraphicEl(idx));\n    }).execute();\n  };\n\n  ;\n\n  LineDraw.prototype.updateLayout = function () {\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n    if (!lineData) {\n      return;\n    }\n\n    lineData.eachItemGraphicEl(function (el, idx) {\n      el.updateLayout(lineData, idx);\n    }, this);\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\n    this._seriesScope = makeSeriesScope(lineData);\n    this._lineData = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup && !isEffectObject(el)) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var itemLayout = lineData.getItemLayout(idx);\n\n      if (lineNeedsDraw(itemLayout)) {\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        this.group.add(el);\n        lineData.setItemGraphicEl(idx, el);\n      }\n    }\n  };\n\n  ;\n\n  LineDraw.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (!lineNeedsDraw(itemLayout)) {\n      return;\n    }\n\n    var el = new this._LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, el);\n    this.group.add(el);\n  };\n\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n      this.group.remove(itemEl);\n      return;\n    }\n\n    if (!itemEl) {\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\n    } else {\n      itemEl.updateData(newLineData, newIdx, seriesScope);\n    }\n\n    newLineData.setItemGraphicEl(newIdx, itemEl);\n    this.group.add(itemEl);\n  };\n\n  return LineDraw;\n}();\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    emphasisLineStyle: hostModel.getModel(['emphasis', 'lineStyle']).getLineStyle(),\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\n    labelStatesModels: getLabelStatesModels(hostModel)\n  };\n}\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nexport default LineDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module"}