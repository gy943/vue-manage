{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport axisDefault from './axisDefault';\nimport { getLayoutParams, mergeLayoutParam, fetchLayoutMode } from '../util/layout';\nimport OrdinalMeta from '../data/OrdinalMeta';\nimport { AXIS_TYPES } from './axisCommonTypes';\nimport { each, merge } from 'zrender/lib/core/util';\n/**\n * Generate sub axis model class\n * @param axisName 'x' 'y' 'radius' 'angle' 'parallel' ...\n */\n\nexport default function axisModelCreator(registers, axisName, BaseAxisModelClass, extraDefaultOption) {\n  each(AXIS_TYPES, function (v, axisType) {\n    var defaultOption = merge(merge({}, axisDefault[axisType], true), extraDefaultOption, true);\n\n    var AxisModel =\n    /** @class */\n    function (_super) {\n      __extends(AxisModel, _super);\n\n      function AxisModel() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _this = _super.apply(this, args) || this;\n\n        _this.type = axisName + 'Axis.' + axisType;\n        return _this;\n      }\n\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n        var layoutMode = fetchLayoutMode(this);\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        merge(option, themeModel.get(axisType + 'Axis'));\n        merge(option, this.getDefaultOption());\n        option.type = getAxisType(option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      };\n\n      AxisModel.prototype.optionUpdated = function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      };\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n\n\n      AxisModel.prototype.getCategories = function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      };\n\n      AxisModel.prototype.getOrdinalMeta = function () {\n        return this.__ordinalMeta;\n      };\n\n      AxisModel.type = axisName + 'Axis.' + axisType;\n      AxisModel.defaultOption = defaultOption;\n      return AxisModel;\n    }(BaseAxisModelClass);\n\n    registers.registerComponentModel(AxisModel);\n  });\n  registers.registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\n}\n\nfunction getAxisType(option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}","map":{"version":3,"names":["__extends","axisDefault","getLayoutParams","mergeLayoutParam","fetchLayoutMode","OrdinalMeta","AXIS_TYPES","each","merge","axisModelCreator","registers","axisName","BaseAxisModelClass","extraDefaultOption","v","axisType","defaultOption","AxisModel","_super","args","_i","arguments","length","_this","apply","type","prototype","mergeDefaultAndTheme","option","ecModel","layoutMode","inputPositionParams","themeModel","getTheme","get","getDefaultOption","getAxisType","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","data","categories","getOrdinalMeta","registerComponentModel","registerSubTypeDefaulter"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/coord/axisModelCreator.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport axisDefault from './axisDefault';\nimport { getLayoutParams, mergeLayoutParam, fetchLayoutMode } from '../util/layout';\nimport OrdinalMeta from '../data/OrdinalMeta';\nimport { AXIS_TYPES } from './axisCommonTypes';\nimport { each, merge } from 'zrender/lib/core/util';\n/**\n * Generate sub axis model class\n * @param axisName 'x' 'y' 'radius' 'angle' 'parallel' ...\n */\n\nexport default function axisModelCreator(registers, axisName, BaseAxisModelClass, extraDefaultOption) {\n  each(AXIS_TYPES, function (v, axisType) {\n    var defaultOption = merge(merge({}, axisDefault[axisType], true), extraDefaultOption, true);\n\n    var AxisModel =\n    /** @class */\n    function (_super) {\n      __extends(AxisModel, _super);\n\n      function AxisModel() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _this = _super.apply(this, args) || this;\n\n        _this.type = axisName + 'Axis.' + axisType;\n        return _this;\n      }\n\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n        var layoutMode = fetchLayoutMode(this);\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        merge(option, themeModel.get(axisType + 'Axis'));\n        merge(option, this.getDefaultOption());\n        option.type = getAxisType(option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      };\n\n      AxisModel.prototype.optionUpdated = function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      };\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n\n\n      AxisModel.prototype.getCategories = function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      };\n\n      AxisModel.prototype.getOrdinalMeta = function () {\n        return this.__ordinalMeta;\n      };\n\n      AxisModel.type = axisName + 'Axis.' + axisType;\n      AxisModel.defaultOption = defaultOption;\n      return AxisModel;\n    }(BaseAxisModelClass);\n\n    registers.registerComponentModel(AxisModel);\n  });\n  registers.registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\n}\n\nfunction getAxisType(option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}