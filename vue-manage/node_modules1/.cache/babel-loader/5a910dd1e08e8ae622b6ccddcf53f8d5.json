{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\nimport { getECData } from '../../util/innerStore';\n\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeLineDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this.group.removeAll();\n    var lineEl = new LargeLinesPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data); // Add back\n\n\n    this.group.add(lineEl);\n    this._incremental = null;\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental();\n\n    if (data.count() > 5e5) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lineEl = new LargeLinesPath();\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data, !!this._incremental);\n\n    if (!this._incremental) {\n      lineEl.rectHover = true;\n      lineEl.cursor = 'default';\n      lineEl.__startIndex = taskParams.start;\n      this.group.add(lineEl);\n    } else {\n      this._incremental.addDisplayable(lineEl, true);\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(lineEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      lineEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex > 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\n        }\n      });\n    }\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nexport default LargeLineDraw;","map":{"version":3,"names":["__extends","graphic","IncrementalDisplayable","lineContain","quadraticContain","getECData","LargeLinesPathShape","polyline","curveness","segs","LargeLinesPath","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","i","length","count","moveTo","k","lineTo","x0","y0","x1","y1","x2","y2","quadraticCurveTo","findDataIndex","x","y","lineWidth","style","dataIndex","containStroke","Path","LargeLineDraw","group","Group","isPersistent","_incremental","updateData","data","removeAll","lineEl","rectHover","cursor","setShape","getLayout","_setCommon","add","incrementalPrepareUpdate","_clearIncremental","silent","incrementalUpdate","taskParams","__startIndex","start","addDisplayable","remove","isIncremental","hostModel","get","useStyle","getModel","getLineStyle","strokeNoScale","getVisual","setStyle","ecData_1","seriesIndex","on","e","offsetX","offsetY","incremental","clearDisplaybles"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/chart/helper/LargeLineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\nimport { getECData } from '../../util/innerStore';\n\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeLineDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this.group.removeAll();\n    var lineEl = new LargeLinesPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data); // Add back\n\n\n    this.group.add(lineEl);\n    this._incremental = null;\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental();\n\n    if (data.count() > 5e5) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lineEl = new LargeLinesPath();\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data, !!this._incremental);\n\n    if (!this._incremental) {\n      lineEl.rectHover = true;\n      lineEl.cursor = 'default';\n      lineEl.__startIndex = taskParams.start;\n      this.group.add(lineEl);\n    } else {\n      this._incremental.addDisplayable(lineEl, true);\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(lineEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      lineEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex > 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\n        }\n      });\n    }\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nexport default LargeLineDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module"}