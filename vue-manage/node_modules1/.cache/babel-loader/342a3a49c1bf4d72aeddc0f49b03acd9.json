{"ast":null,"code":"import { normalizeArcAngles } from '../../core/PathProxy';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0;\n  var y10 = y1 - y0;\n  var x32 = x3 - x2;\n  var y32 = y3 - y2;\n  var t = y32 * x10 - x32 * y10;\n\n  if (t * t < e) {\n    return;\n  }\n\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n  var x01 = x0 - x1;\n  var y01 = y0 - y1;\n  var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n  var ox = lo * y01;\n  var oy = -lo * x01;\n  var x11 = x0 + ox;\n  var y11 = y0 + oy;\n  var x10 = x1 + ox;\n  var y10 = y1 + oy;\n  var x00 = (x11 + x10) / 2;\n  var y00 = (y11 + y10) / 2;\n  var dx = x10 - x11;\n  var dy = y10 - y11;\n  var d2 = dx * dx + dy * dy;\n  var r = radius - cr;\n  var s = x11 * y10 - x10 * y11;\n  var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n  var cx0 = (s * dy - dx * d) / d2;\n  var cy0 = (-s * dx - dy * d) / d2;\n  var cx1 = (s * dy + dx * d) / d2;\n  var cy1 = (-s * dx + dy * d) / d2;\n  var dx0 = cx0 - x00;\n  var dy0 = cy0 - y00;\n  var dx1 = cx1 - x00;\n  var dy1 = cy1 - y00;\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n    cx0 = cx1;\n    cy0 = cy1;\n  }\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (radius / r - 1),\n    y11: cy0 * (radius / r - 1)\n  };\n}\n\nexport function buildPath(ctx, shape) {\n  var radius = mathMax(shape.r, 0);\n  var innerRadius = mathMax(shape.r0 || 0, 0);\n  var hasRadius = radius > 0;\n  var hasInnerRadius = innerRadius > 0;\n\n  if (!hasRadius && !hasInnerRadius) {\n    return;\n  }\n\n  if (!hasRadius) {\n    radius = innerRadius;\n    innerRadius = 0;\n  }\n\n  if (innerRadius > radius) {\n    var tmp = radius;\n    radius = innerRadius;\n    innerRadius = tmp;\n  }\n\n  var clockwise = !!shape.clockwise;\n  var startAngle = shape.startAngle;\n  var endAngle = shape.endAngle;\n  var arc;\n\n  if (startAngle === endAngle) {\n    arc = 0;\n  } else {\n    var tmpAngles = [startAngle, endAngle];\n    normalizeArcAngles(tmpAngles, !clockwise);\n    arc = mathAbs(tmpAngles[0] - tmpAngles[1]);\n  }\n\n  var x = shape.cx;\n  var y = shape.cy;\n  var cornerRadius = shape.cornerRadius || 0;\n  var innerCornerRadius = shape.innerCornerRadius || 0;\n\n  if (!(radius > e)) {\n    ctx.moveTo(x, y);\n  } else if (arc > PI2 - e) {\n    ctx.moveTo(x + radius * mathCos(startAngle), y + radius * mathSin(startAngle));\n    ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n\n    if (innerRadius > e) {\n      ctx.moveTo(x + innerRadius * mathCos(endAngle), y + innerRadius * mathSin(endAngle));\n      ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n    }\n  } else {\n    var halfRd = mathAbs(radius - innerRadius) / 2;\n    var cr = mathMin(halfRd, cornerRadius);\n    var icr = mathMin(halfRd, innerCornerRadius);\n    var cr0 = icr;\n    var cr1 = cr;\n    var xrs = radius * mathCos(startAngle);\n    var yrs = radius * mathSin(startAngle);\n    var xire = innerRadius * mathCos(endAngle);\n    var yire = innerRadius * mathSin(endAngle);\n    var xre = void 0;\n    var yre = void 0;\n    var xirs = void 0;\n    var yirs = void 0;\n\n    if (cr > e || icr > e) {\n      xre = radius * mathCos(endAngle);\n      yre = radius * mathSin(endAngle);\n      xirs = innerRadius * mathCos(startAngle);\n      yirs = innerRadius * mathSin(startAngle);\n\n      if (arc < PI) {\n        var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n\n        if (it_1) {\n          var x0 = xrs - it_1[0];\n          var y0 = yrs - it_1[1];\n          var x1 = xre - it_1[0];\n          var y1 = yre - it_1[1];\n          var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n          var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n          cr0 = mathMin(icr, (innerRadius - b) / (a - 1));\n          cr1 = mathMin(cr, (radius - b) / (a + 1));\n        }\n      }\n    }\n\n    if (!(arc > e)) {\n      ctx.moveTo(x + xrs, y + yrs);\n    } else if (cr1 > e) {\n      var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, cr1, clockwise);\n      var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, cr1, clockwise);\n      ctx.moveTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n\n      if (cr1 < cr) {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      } else {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n        ctx.arc(x, y, radius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), !clockwise);\n        ctx.arc(x + ct1.cx, y + ct1.cy, cr1, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      }\n    } else {\n      ctx.moveTo(x + xrs, y + yrs);\n      ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n    }\n\n    if (!(innerRadius > e) || !(arc > e)) {\n      ctx.lineTo(x + xire, y + yire);\n    } else if (cr0 > e) {\n      var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -cr0, clockwise);\n      var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -cr0, clockwise);\n      ctx.lineTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n\n      if (cr0 < icr) {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      } else {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n        ctx.arc(x, y, innerRadius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), clockwise);\n        ctx.arc(x + ct1.cx, y + ct1.cy, cr0, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      }\n    } else {\n      ctx.lineTo(x + xire, y + yire);\n      ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n    }\n  }\n\n  ctx.closePath();\n}","map":{"version":3,"names":["normalizeArcAngles","PI","Math","PI2","mathSin","sin","mathCos","cos","mathACos","acos","mathATan2","atan2","mathAbs","abs","mathSqrt","sqrt","mathMax","max","mathMin","min","e","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","computeCornerTangents","radius","cr","clockwise","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","s","d","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","buildPath","ctx","shape","innerRadius","r0","hasRadius","hasInnerRadius","tmp","startAngle","endAngle","arc","tmpAngles","x","y","cornerRadius","innerCornerRadius","moveTo","halfRd","icr","cr0","cr1","xrs","yrs","xire","yire","xre","yre","xirs","yirs","it_1","a","b","ct0","ct1","lineTo","closePath"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/zrender/lib/graphic/helper/roundSector.js"],"sourcesContent":["import { normalizeArcAngles } from '../../core/PathProxy';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0;\n    var y10 = y1 - y0;\n    var x32 = x3 - x2;\n    var y32 = y3 - y2;\n    var t = y32 * x10 - x32 * y10;\n    if (t * t < e) {\n        return;\n    }\n    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n    return [x0 + t * x10, y0 + t * y10];\n}\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n    var x01 = x0 - x1;\n    var y01 = y0 - y1;\n    var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n    var ox = lo * y01;\n    var oy = -lo * x01;\n    var x11 = x0 + ox;\n    var y11 = y0 + oy;\n    var x10 = x1 + ox;\n    var y10 = y1 + oy;\n    var x00 = (x11 + x10) / 2;\n    var y00 = (y11 + y10) / 2;\n    var dx = x10 - x11;\n    var dy = y10 - y11;\n    var d2 = dx * dx + dy * dy;\n    var r = radius - cr;\n    var s = x11 * y10 - x10 * y11;\n    var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n    var cx0 = (s * dy - dx * d) / d2;\n    var cy0 = (-s * dx - dy * d) / d2;\n    var cx1 = (s * dy + dx * d) / d2;\n    var cy1 = (-s * dx + dy * d) / d2;\n    var dx0 = cx0 - x00;\n    var dy0 = cy0 - y00;\n    var dx1 = cx1 - x00;\n    var dy1 = cy1 - y00;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n        cx0 = cx1;\n        cy0 = cy1;\n    }\n    return {\n        cx: cx0,\n        cy: cy0,\n        x01: -ox,\n        y01: -oy,\n        x11: cx0 * (radius / r - 1),\n        y11: cy0 * (radius / r - 1)\n    };\n}\nexport function buildPath(ctx, shape) {\n    var radius = mathMax(shape.r, 0);\n    var innerRadius = mathMax(shape.r0 || 0, 0);\n    var hasRadius = radius > 0;\n    var hasInnerRadius = innerRadius > 0;\n    if (!hasRadius && !hasInnerRadius) {\n        return;\n    }\n    if (!hasRadius) {\n        radius = innerRadius;\n        innerRadius = 0;\n    }\n    if (innerRadius > radius) {\n        var tmp = radius;\n        radius = innerRadius;\n        innerRadius = tmp;\n    }\n    var clockwise = !!shape.clockwise;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var arc;\n    if (startAngle === endAngle) {\n        arc = 0;\n    }\n    else {\n        var tmpAngles = [startAngle, endAngle];\n        normalizeArcAngles(tmpAngles, !clockwise);\n        arc = mathAbs(tmpAngles[0] - tmpAngles[1]);\n    }\n    var x = shape.cx;\n    var y = shape.cy;\n    var cornerRadius = shape.cornerRadius || 0;\n    var innerCornerRadius = shape.innerCornerRadius || 0;\n    if (!(radius > e)) {\n        ctx.moveTo(x, y);\n    }\n    else if (arc > PI2 - e) {\n        ctx.moveTo(x + radius * mathCos(startAngle), y + radius * mathSin(startAngle));\n        ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n        if (innerRadius > e) {\n            ctx.moveTo(x + innerRadius * mathCos(endAngle), y + innerRadius * mathSin(endAngle));\n            ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    else {\n        var halfRd = mathAbs(radius - innerRadius) / 2;\n        var cr = mathMin(halfRd, cornerRadius);\n        var icr = mathMin(halfRd, innerCornerRadius);\n        var cr0 = icr;\n        var cr1 = cr;\n        var xrs = radius * mathCos(startAngle);\n        var yrs = radius * mathSin(startAngle);\n        var xire = innerRadius * mathCos(endAngle);\n        var yire = innerRadius * mathSin(endAngle);\n        var xre = void 0;\n        var yre = void 0;\n        var xirs = void 0;\n        var yirs = void 0;\n        if (cr > e || icr > e) {\n            xre = radius * mathCos(endAngle);\n            yre = radius * mathSin(endAngle);\n            xirs = innerRadius * mathCos(startAngle);\n            yirs = innerRadius * mathSin(startAngle);\n            if (arc < PI) {\n                var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n                if (it_1) {\n                    var x0 = xrs - it_1[0];\n                    var y0 = yrs - it_1[1];\n                    var x1 = xre - it_1[0];\n                    var y1 = yre - it_1[1];\n                    var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n                    var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n                    cr0 = mathMin(icr, (innerRadius - b) / (a - 1));\n                    cr1 = mathMin(cr, (radius - b) / (a + 1));\n                }\n            }\n        }\n        if (!(arc > e)) {\n            ctx.moveTo(x + xrs, y + yrs);\n        }\n        else if (cr1 > e) {\n            var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, cr1, clockwise);\n            var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, cr1, clockwise);\n            ctx.moveTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n            if (cr1 < cr) {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n            else {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n                ctx.arc(x, y, radius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), !clockwise);\n                ctx.arc(x + ct1.cx, y + ct1.cy, cr1, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n        }\n        else {\n            ctx.moveTo(x + xrs, y + yrs);\n            ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n        }\n        if (!(innerRadius > e) || !(arc > e)) {\n            ctx.lineTo(x + xire, y + yire);\n        }\n        else if (cr0 > e) {\n            var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -cr0, clockwise);\n            var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -cr0, clockwise);\n            ctx.lineTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n            if (cr0 < icr) {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n            else {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n                ctx.arc(x, y, innerRadius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), clockwise);\n                ctx.arc(x + ct1.cx, y + ct1.cy, cr0, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n        }\n        else {\n            ctx.lineTo(x + xire, y + yire);\n            ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    ctx.closePath();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}