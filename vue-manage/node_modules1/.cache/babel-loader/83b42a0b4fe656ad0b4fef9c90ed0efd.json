{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nimport { parsePercent } from '../../util/number';\nimport { Point } from '../../util/graphic';\nimport { each } from 'zrender/lib/core/util';\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper';\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper';\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      item.label.x = cx + (dx + item.len2) * dir;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy > semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n\n    if (isPositionCenter(layout)) {\n      continue;\n    }\n\n    var linePoints = layout.linePoints;\n\n    if (linePoints) {\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var realTextWidth = layout.rect.width;\n      var targetTextWidth = void 0;\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      if (targetTextWidth < layout.rect.width) {\n        // TODOTODO\n        // layout.text = textContain.truncateText(layout.text, targetTextWidth, layout.font);\n        layout.label.style.width = targetTextWidth;\n\n        if (layout.labelAlignTo === 'edge') {\n          realTextWidth = targetTextWidth; // realTextWidth = textContain.getWidth(layout.text, layout.font);\n        }\n      }\n\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nexport default function pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      each(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else {\n      labelRotate = rotate ? nx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        limitTurnAngle(linePoints, layout.minTurnAngle);\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}","map":{"version":3,"names":["parsePercent","Point","each","limitTurnAngle","limitSurfaceAngle","shiftLayoutOnY","RADIAN","Math","PI","adjustSingleSide","list","cx","cy","r","dir","viewWidth","viewHeight","viewLeft","viewTop","farthestX","length","recalculateXOnSemiToAlignOnEllipseCurve","semi","rB","rB2","i","item","dy","abs","label","y","rA","len","rA2","dx","sqrt","x","len2","recalculateX","items","topSemi","maxY","bottomSemi","labelAlignTo","push","position","linePoints","avoidOverlap","labelLayoutList","leftList","rightList","leftmostX","Number","MAX_VALUE","rightmostX","isPositionCenter","min","max","layout","isAlignToEdge","realTextWidth","rect","width","targetTextWidth","labelDistance","edgeDistance","bleedMargin","style","dist","sectorShape","pieLabelLayout","seriesModel","data","getData","hasLabelRotate","minShowLabelRadian","get","viewRect","getLayout","height","setNotShow","el","ignore","isLabelShown","key","states","idx","sector","getItemGraphicEl","shape","getTextContent","labelLine","getTextGuideLine","itemModel","getItemModel","labelModel","getModel","labelPosition","labelLineModel","labelLineLen","labelLineLen2","endAngle","startAngle","midAngle","nx","cos","ny","sin","textX","textY","textAlign","isLabelInside","x1","r0","y1","x2","y2","x3","y3","labelRotate","rotate","rotation","setStyle","verticalAlign","textRect","getBoundingRect","clone","applyTransform","getComputedTransform","margin","minTurnAngle","maxSurfaceAngle","surfaceNormal","align","selectState","select","setTextConfig","inside","notShowLabel","isNaN","setShape","points","__hostTarget","textGuideLineConfig","anchor"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/chart/pie/labelLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nimport { parsePercent } from '../../util/number';\nimport { Point } from '../../util/graphic';\nimport { each } from 'zrender/lib/core/util';\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper';\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper';\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      item.label.x = cx + (dx + item.len2) * dir;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy > semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n\n    if (isPositionCenter(layout)) {\n      continue;\n    }\n\n    var linePoints = layout.linePoints;\n\n    if (linePoints) {\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var realTextWidth = layout.rect.width;\n      var targetTextWidth = void 0;\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      if (targetTextWidth < layout.rect.width) {\n        // TODOTODO\n        // layout.text = textContain.truncateText(layout.text, targetTextWidth, layout.font);\n        layout.label.style.width = targetTextWidth;\n\n        if (layout.labelAlignTo === 'edge') {\n          realTextWidth = targetTextWidth; // realTextWidth = textContain.getWidth(layout.text, layout.font);\n        }\n      }\n\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nexport default function pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      each(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else {\n      labelRotate = rotate ? nx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        limitTurnAngle(linePoints, layout.minTurnAngle);\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}