{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert } from 'zrender/lib/core/util';\nimport { VISUAL_DIMENSIONS } from '../../util/types';\nexport function summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }","map":{"version":3,"names":["each","createHashMap","assert","VISUAL_DIMENSIONS","summarizeDimensions","data","summary","encode","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutput","dimensionNames","dimensions","slice","dimName","dimItem","getDimensionInfo","coordDim","process","env","NODE_ENV","get","coordDimIndex","getOrCreateEncodeArr","isExtraCoord","set","mayLabelDimType","type","index","defaultTooltip","push","v","otherDim","encodeArr","dimIndex","otherDims","name","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","concat","encodeLabel","label","length","encodeTooltip","tooltip","dim","hasOwnProperty","getDimensionTypeByAxis","axisType","dimType"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/data/helper/dimensionHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert } from 'zrender/lib/core/util';\nimport { VISUAL_DIMENSIONS } from '../../util/types';\nexport function summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}