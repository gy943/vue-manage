{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport SymbolDraw from '../helper/SymbolDraw';\nimport SymbolClz from '../helper/Symbol';\nimport lineAnimationDiff from './lineAnimationDiff';\nimport * as graphic from '../../util/graphic';\nimport * as modelUtil from '../../util/model';\nimport { ECPolyline, ECPolygon } from './poly';\nimport ChartView from '../../view/Chart';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { getECData } from '../../util/innerStore';\nimport { createFloat32Array } from '../../util/vendor';\nimport { convertToColorString } from '../../util/format';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n\n  for (; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      offset: 0,\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value, true)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var showEndLabel = endLabelModel_1.get('show');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = showEndLabel ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var focus = seriesModel.get(['emphasis', 'focus']);\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    enableHoverEmphasis(polyline, focus, blurScope);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    var connectNulls = seriesModel.get('connectNulls');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      enableHoverEmphasis(polygon, focus, blurScope);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  };\n\n  LineView.prototype.dispose = function () {};\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (typeof seriesDuration === 'function') {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (endLabelModel.get('show')) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;","map":{"version":3,"names":["__extends","zrUtil","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","ECPolyline","ECPolygon","ChartView","prepareDataCoordInfo","getStackedOnPoint","createGridClipPath","createPolarClipPath","isCoordinateSystemType","setStatesStylesFromModel","setStatesFlag","enableHoverEmphasis","setLabelStyle","getLabelStatesModels","labelInner","getDefaultLabel","getDefaultInterpolatedLabel","getECData","createFloat32Array","convertToColorString","isPointsSame","points1","points2","length","i","bboxFromPoints","points","minX","Infinity","minY","maxX","maxY","x","y","isNaN","Math","min","max","getBoundingDiff","_a","min1","max1","_b","min2","max2","abs","getSmooth","smooth","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","len","count","idx","pt","turnPointsIntoStep","stepTurnAt","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","stepPt","nextPt","push","middle","stepPt2","getVisualGradient","visualMetaList","getVisual","type","process","env","NODE_ENV","console","warn","coordDim","visualMeta","dimIndex","dimension","dimName","dimensions","dimInfo","getDimensionInfo","axis","getAxis","colorStops","map","stops","stop","offset","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","slice","reverse","tinyExtent","minCoord","maxCoord","coordSpan","each","unshift","gradient","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","ordinalNumber","scale","getRawOrdinalNumber","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","dataLen","step","round","getSymbolSize","isHorizontal","isPointNull","getLastIndexNotNull","getPointAtIndex","getIndexRange","xOrY","dimIdx","a","b","prevIndex","nextIndex","range","t","createLineClipPath","lineView","hasAnimation","endLabelModel_1","getModel","showEndLabel","valueAnimation_1","data_1","getData","labelAnimationRecord_1","lastFrameIndex","during","percent","clipRect","_endLabelOnDuring","clipPath","endLabel","_endLabel","originalX","attr","originalY","rectShape","shape","expandSize","width","height","getEndLabelStateSpecified","endLabelModel","isBaseInversed","inverse","align","verticalAlign","normal","LineView","_super","apply","arguments","prototype","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","api","_this","coordinateSystem","lineStyleModel","areaStyleModel","getLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r","_clipShapeForSymbol","visualColor","_step","updateData","isIgnore","clipShape","disableAnimation","getSymbolPoint","_initSymbolLabelAnimation","_newPolyline","_newPolygon","_initOrUpdateEndLabel","setClipPath","_stackedOnPoints","_points","_doUpdateAnimation","setShape","focus","blurScope","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","style","lineWidth","emphasisLineStyle","getState","seriesIndex","smoothMonotone","connectNulls","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","decal","changePolyState","toState","_changePolyState","onHoverStateChange","_valueOrigin","dispose","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","contain","zlevel","z","setZ","symbolLabel","getSymbolPath","getTextContent","z2","stopSymbolAnimation","call","downplay","segmentIgnoreThreshold","isHorizontalOrRadial","isAxisInverse","hostModel","seriesDuration","seriesDalay","seriesDalayValue","point","start","end","current","polarClip","pointToCoord","startAngle","endAngle","PI","gridClip","ratio","delay","symbolPath","text","scaleX","scaleY","animateTo","duration","animateFrom","disableLabelAnimation","inheritColor","data_2","Text","ignoreClip","setTextContent","labelFetcher","labelDataIndex","defaultText","opt","interpolatedValue","enableTextSetter","textConfig","position","removeTextContent","animationRecord","valueAnimation","precision","distance","distanceX","distanceY","dataIndexRange","indices","diff","getRawValue","getPointOn","startValue","endValue","interpolateRawValues","setLabelText","stackedOnCurrent","next","stackedOnNext","__points","target","stopAnimation","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","dirtyShape","markRedraw","removeAll"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport SymbolDraw from '../helper/SymbolDraw';\nimport SymbolClz from '../helper/Symbol';\nimport lineAnimationDiff from './lineAnimationDiff';\nimport * as graphic from '../../util/graphic';\nimport * as modelUtil from '../../util/model';\nimport { ECPolyline, ECPolygon } from './poly';\nimport ChartView from '../../view/Chart';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { getECData } from '../../util/innerStore';\nimport { createFloat32Array } from '../../util/vendor';\nimport { convertToColorString } from '../../util/format';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n\n  for (; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      offset: 0,\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value, true)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var showEndLabel = endLabelModel_1.get('show');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = showEndLabel ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var focus = seriesModel.get(['emphasis', 'focus']);\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    enableHoverEmphasis(polyline, focus, blurScope);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    var connectNulls = seriesModel.get('connectNulls');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      enableHoverEmphasis(polygon, focus, blurScope);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  };\n\n  LineView.prototype.dispose = function () {};\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (typeof seriesDuration === 'function') {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (endLabelModel.get('show')) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}