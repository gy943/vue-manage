{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nimport { isObject, each, indexOf, retrieve3 } from 'zrender/lib/core/util';\nimport { getLayoutRect } from '../../util/layout';\nimport { createScaleByModel, ifAxisCrossZero, niceScaleExtent, estimateLabelUnionRect, getDataDimensionsOnAxis } from '../../coord/axisHelper';\nimport Cartesian2D, { cartesian2DDimensions } from './Cartesian2D';\nimport Axis2D from './Axis2D';\nimport { SINGLE_REFERRING } from '../../util/model';\nimport { isCartesian2DSeries, findAxisModels } from './cartesianAxisHelper';\n\nvar Grid =\n/** @class */\nfunction () {\n  function Grid(gridModel, ecModel, api) {\n    // FIXME:TS where used (different from registered type 'cartesian2d')?\n    this.type = 'grid';\n    this._coordsMap = {};\n    this._coordsList = [];\n    this._axesMap = {};\n    this._axesList = [];\n    this.axisPointerEnabled = true;\n    this.dimensions = cartesian2DDimensions;\n\n    this._initCartesian(gridModel, ecModel, api);\n\n    this.model = gridModel;\n  }\n\n  Grid.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Grid.prototype.update = function (ecModel, api) {\n    var axesMap = this._axesMap;\n\n    this._updateScale(ecModel, this.model);\n\n    each(axesMap.x, function (xAxis) {\n      niceScaleExtent(xAxis.scale, xAxis.model);\n    });\n    each(axesMap.y, function (yAxis) {\n      niceScaleExtent(yAxis.scale, yAxis.model);\n    }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n    var onZeroRecords = {};\n    each(axesMap.x, function (xAxis) {\n      fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n    });\n    each(axesMap.y, function (yAxis) {\n      fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n    }); // Resize again if containLabel is enabled\n    // FIXME It may cause getting wrong grid size in data processing stage\n\n    this.resize(this.model, api);\n  };\n  /**\n   * Resize the grid\n   */\n\n\n  Grid.prototype.resize = function (gridModel, api, ignoreContainLabel) {\n    var boxLayoutParams = gridModel.getBoxLayoutParams();\n    var isContainLabel = !ignoreContainLabel && gridModel.get('containLabel');\n    var gridRect = getLayoutRect(boxLayoutParams, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    this._rect = gridRect;\n    var axesList = this._axesList;\n    adjustAxes(); // Minus label size\n\n    if (isContainLabel) {\n      each(axesList, function (axis) {\n        if (!axis.model.get(['axisLabel', 'inside'])) {\n          var labelUnionRect = estimateLabelUnionRect(axis);\n\n          if (labelUnionRect) {\n            var dim = axis.isHorizontal() ? 'height' : 'width';\n            var margin = axis.model.get(['axisLabel', 'margin']);\n            gridRect[dim] -= labelUnionRect[dim] + margin;\n\n            if (axis.position === 'top') {\n              gridRect.y += labelUnionRect.height + margin;\n            } else if (axis.position === 'left') {\n              gridRect.x += labelUnionRect.width + margin;\n            }\n          }\n        }\n      });\n      adjustAxes();\n    }\n\n    each(this._coordsList, function (coord) {\n      // Calculate affine matrix to accelerate the data to point transform.\n      // If all the axes scales are time or value.\n      coord.calcAffineTransform();\n    });\n\n    function adjustAxes() {\n      each(axesList, function (axis) {\n        var isHorizontal = axis.isHorizontal();\n        var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n        var idx = axis.inverse ? 1 : 0;\n        axis.setExtent(extent[idx], extent[1 - idx]);\n        updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n      });\n    }\n  };\n\n  Grid.prototype.getAxis = function (dim, axisIndex) {\n    var axesMapOnDim = this._axesMap[dim];\n\n    if (axesMapOnDim != null) {\n      return axesMapOnDim[axisIndex || 0]; // if (axisIndex == null) {\n      //     Find first axis\n      //     for (let name in axesMapOnDim) {\n      //         if (axesMapOnDim.hasOwnProperty(name)) {\n      //             return axesMapOnDim[name];\n      //         }\n      //     }\n      // }\n      // return axesMapOnDim[axisIndex];\n    }\n  };\n\n  Grid.prototype.getAxes = function () {\n    return this._axesList.slice();\n  };\n\n  Grid.prototype.getCartesian = function (xAxisIndex, yAxisIndex) {\n    if (xAxisIndex != null && yAxisIndex != null) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      return this._coordsMap[key];\n    }\n\n    if (isObject(xAxisIndex)) {\n      yAxisIndex = xAxisIndex.yAxisIndex;\n      xAxisIndex = xAxisIndex.xAxisIndex;\n    }\n\n    for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n      if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n        return coordList[i];\n      }\n    }\n  };\n\n  Grid.prototype.getCartesians = function () {\n    return this._coordsList.slice();\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.convertToPixel = function (ecModel, finder, value) {\n    var target = this._findConvertTarget(finder);\n\n    return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.convertFromPixel = function (ecModel, finder, value) {\n    var target = this._findConvertTarget(finder);\n\n    return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n  };\n\n  Grid.prototype._findConvertTarget = function (finder) {\n    var seriesModel = finder.seriesModel;\n    var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\n    var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\n    var gridModel = finder.gridModel;\n    var coordsList = this._coordsList;\n    var cartesian;\n    var axis;\n\n    if (seriesModel) {\n      cartesian = seriesModel.coordinateSystem;\n      indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n    } else if (xAxisModel && yAxisModel) {\n      cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n    } else if (xAxisModel) {\n      axis = this.getAxis('x', xAxisModel.componentIndex);\n    } else if (yAxisModel) {\n      axis = this.getAxis('y', yAxisModel.componentIndex);\n    } // Lowest priority.\n    else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n    return {\n      cartesian: cartesian,\n      axis: axis\n    };\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.containPoint = function (point) {\n    var coord = this._coordsList[0];\n\n    if (coord) {\n      return coord.containPoint(point);\n    }\n  };\n  /**\n   * Initialize cartesian coordinate systems\n   */\n\n\n  Grid.prototype._initCartesian = function (gridModel, ecModel, api) {\n    var _this = this;\n\n    var grid = this;\n    var axisPositionUsed = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false\n    };\n    var axesMap = {\n      x: {},\n      y: {}\n    };\n    var axesCount = {\n      x: 0,\n      y: 0\n    }; /// Create axis\n\n    ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n    ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n    if (!axesCount.x || !axesCount.y) {\n      // Roll back when there no either x or y axis\n      this._axesMap = {};\n      this._axesList = [];\n      return;\n    }\n\n    this._axesMap = axesMap; /// Create cartesian2d\n\n    each(axesMap.x, function (xAxis, xAxisIndex) {\n      each(axesMap.y, function (yAxis, yAxisIndex) {\n        var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n        var cartesian = new Cartesian2D(key);\n        cartesian.master = _this;\n        cartesian.model = gridModel;\n        _this._coordsMap[key] = cartesian;\n\n        _this._coordsList.push(cartesian);\n\n        cartesian.addAxis(xAxis);\n        cartesian.addAxis(yAxis);\n      });\n    });\n\n    function createAxisCreator(dimName) {\n      return function (axisModel, idx) {\n        if (!isAxisUsedInTheGrid(axisModel, gridModel)) {\n          return;\n        }\n\n        var axisPosition = axisModel.get('position');\n\n        if (dimName === 'x') {\n          // Fix position\n          if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n            // Default bottom of X\n            axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n          }\n        } else {\n          // Fix position\n          if (axisPosition !== 'left' && axisPosition !== 'right') {\n            // Default left of Y\n            axisPosition = axisPositionUsed.left ? 'right' : 'left';\n          }\n        }\n\n        axisPositionUsed[axisPosition] = true;\n        var axis = new Axis2D(dimName, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n        var isCategory = axis.type === 'category';\n        axis.onBand = isCategory && axisModel.get('boundaryGap');\n        axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n        axisModel.axis = axis; // Inject axisModel into axis\n\n        axis.model = axisModel; // Inject grid info axis\n\n        axis.grid = grid; // Index of axis, can be used as key\n\n        axis.index = idx;\n\n        grid._axesList.push(axis);\n\n        axesMap[dimName][idx] = axis;\n        axesCount[dimName]++;\n      };\n    }\n  };\n  /**\n   * Update cartesian properties from series.\n   */\n\n\n  Grid.prototype._updateScale = function (ecModel, gridModel) {\n    // Reset scale\n    each(this._axesList, function (axis) {\n      axis.scale.setExtent(Infinity, -Infinity);\n\n      if (axis.type === 'category') {\n        var categorySortInfo = axis.model.get('categorySortInfo');\n        axis.scale.setSortInfo(categorySortInfo);\n      }\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (isCartesian2DSeries(seriesModel)) {\n        var axesModelMap = findAxisModels(seriesModel);\n        var xAxisModel = axesModelMap.xAxisModel;\n        var yAxisModel = axesModelMap.yAxisModel;\n\n        if (!isAxisUsedInTheGrid(xAxisModel, gridModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel)) {\n          return;\n        }\n\n        var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        var data = seriesModel.getData();\n        var xAxis = cartesian.getAxis('x');\n        var yAxis = cartesian.getAxis('y');\n\n        if (data.type === 'list') {\n          unionExtent(data, xAxis);\n          unionExtent(data, yAxis);\n        }\n      }\n    }, this);\n\n    function unionExtent(data, axis) {\n      each(getDataDimensionsOnAxis(data, axis.dim), function (dim) {\n        axis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  };\n  /**\n   * @param dim 'x' or 'y' or 'auto' or null/undefined\n   */\n\n\n  Grid.prototype.getTooltipAxes = function (dim) {\n    var baseAxes = [];\n    var otherAxes = [];\n    each(this.getCartesians(), function (cartesian) {\n      var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n      var otherAxis = cartesian.getOtherAxis(baseAxis);\n      indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n      indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n    });\n    return {\n      baseAxes: baseAxes,\n      otherAxes: otherAxes\n    };\n  };\n\n  Grid.create = function (ecModel, api) {\n    var grids = [];\n    ecModel.eachComponent('grid', function (gridModel, idx) {\n      var grid = new Grid(gridModel, ecModel, api);\n      grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n      // should be performed in create stage.\n\n      grid.resize(gridModel, api, true);\n      gridModel.coordinateSystem = grid;\n      grids.push(grid);\n    }); // Inject the coordinateSystems into seriesModel\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (!isCartesian2DSeries(seriesModel)) {\n        return;\n      }\n\n      var axesModelMap = findAxisModels(seriesModel);\n      var xAxisModel = axesModelMap.xAxisModel;\n      var yAxisModel = axesModelMap.yAxisModel;\n      var gridModel = xAxisModel.getCoordSysModel();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!gridModel) {\n          throw new Error('Grid \"' + retrieve3(xAxisModel.get('gridIndex'), xAxisModel.get('gridId'), 0) + '\" not found');\n        }\n\n        if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n          throw new Error('xAxis and yAxis must use the same grid');\n        }\n      }\n\n      var grid = gridModel.coordinateSystem;\n      seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n    });\n    return grids;\n  }; // For deciding which dimensions to use when creating list data\n\n\n  Grid.dimensions = cartesian2DDimensions;\n  return Grid;\n}();\n/**\n * Check if the axis is used in the specified grid.\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, // Key: see `getOnZeroRecordKey`\nonZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get(['axisLine', 'onZero']);\n  var onZeroAxisIndex = axisModel.get(['axisLine', 'onZeroAxisIndex']);\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nexport default Grid;","map":{"version":3,"names":["isObject","each","indexOf","retrieve3","getLayoutRect","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","getDataDimensionsOnAxis","Cartesian2D","cartesian2DDimensions","Axis2D","SINGLE_REFERRING","isCartesian2DSeries","findAxisModels","Grid","gridModel","ecModel","api","type","_coordsMap","_coordsList","_axesMap","_axesList","axisPointerEnabled","dimensions","_initCartesian","model","prototype","getRect","_rect","update","axesMap","_updateScale","x","xAxis","scale","y","yAxis","onZeroRecords","fixAxisOnZero","resize","ignoreContainLabel","boxLayoutParams","getBoxLayoutParams","isContainLabel","get","gridRect","width","getWidth","height","getHeight","axesList","adjustAxes","axis","labelUnionRect","dim","isHorizontal","margin","position","coord","calcAffineTransform","extent","idx","inverse","setExtent","updateAxisTransform","getAxis","axisIndex","axesMapOnDim","getAxes","slice","getCartesian","xAxisIndex","yAxisIndex","key","i","coordList","length","index","getCartesians","convertToPixel","finder","value","target","_findConvertTarget","cartesian","dataToPoint","toGlobalCoord","dataToCoord","convertFromPixel","pointToData","coordToData","toLocalCoord","seriesModel","xAxisModel","getReferringComponents","models","yAxisModel","coordsList","coordinateSystem","componentIndex","grid","containPoint","point","_this","axisPositionUsed","left","right","top","bottom","axesCount","eachComponent","createAxisCreator","master","push","addAxis","dimName","axisModel","isAxisUsedInTheGrid","axisPosition","isCategory","onBand","Infinity","categorySortInfo","setSortInfo","eachSeries","axesModelMap","data","getData","unionExtent","unionExtentFromData","getTooltipAxes","baseAxes","otherAxes","baseAxis","getBaseAxis","otherAxis","getOtherAxis","create","grids","name","getCoordSysModel","process","env","NODE_ENV","Error","otherAxisDim","getAxesOnZeroOf","otherAxisOnZeroOf","onZero","onZeroAxisIndex","canOnZeroToAxis","hasOwnProperty","getOnZeroRecordKey","coordBase","axisExtent","getExtent","axisExtentSum"],"sources":["E:/school/qianduan/web/vue-manage/node_modules/echarts/lib/coord/cartesian/Grid.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nimport { isObject, each, indexOf, retrieve3 } from 'zrender/lib/core/util';\nimport { getLayoutRect } from '../../util/layout';\nimport { createScaleByModel, ifAxisCrossZero, niceScaleExtent, estimateLabelUnionRect, getDataDimensionsOnAxis } from '../../coord/axisHelper';\nimport Cartesian2D, { cartesian2DDimensions } from './Cartesian2D';\nimport Axis2D from './Axis2D';\nimport { SINGLE_REFERRING } from '../../util/model';\nimport { isCartesian2DSeries, findAxisModels } from './cartesianAxisHelper';\n\nvar Grid =\n/** @class */\nfunction () {\n  function Grid(gridModel, ecModel, api) {\n    // FIXME:TS where used (different from registered type 'cartesian2d')?\n    this.type = 'grid';\n    this._coordsMap = {};\n    this._coordsList = [];\n    this._axesMap = {};\n    this._axesList = [];\n    this.axisPointerEnabled = true;\n    this.dimensions = cartesian2DDimensions;\n\n    this._initCartesian(gridModel, ecModel, api);\n\n    this.model = gridModel;\n  }\n\n  Grid.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Grid.prototype.update = function (ecModel, api) {\n    var axesMap = this._axesMap;\n\n    this._updateScale(ecModel, this.model);\n\n    each(axesMap.x, function (xAxis) {\n      niceScaleExtent(xAxis.scale, xAxis.model);\n    });\n    each(axesMap.y, function (yAxis) {\n      niceScaleExtent(yAxis.scale, yAxis.model);\n    }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n    var onZeroRecords = {};\n    each(axesMap.x, function (xAxis) {\n      fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n    });\n    each(axesMap.y, function (yAxis) {\n      fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n    }); // Resize again if containLabel is enabled\n    // FIXME It may cause getting wrong grid size in data processing stage\n\n    this.resize(this.model, api);\n  };\n  /**\n   * Resize the grid\n   */\n\n\n  Grid.prototype.resize = function (gridModel, api, ignoreContainLabel) {\n    var boxLayoutParams = gridModel.getBoxLayoutParams();\n    var isContainLabel = !ignoreContainLabel && gridModel.get('containLabel');\n    var gridRect = getLayoutRect(boxLayoutParams, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    this._rect = gridRect;\n    var axesList = this._axesList;\n    adjustAxes(); // Minus label size\n\n    if (isContainLabel) {\n      each(axesList, function (axis) {\n        if (!axis.model.get(['axisLabel', 'inside'])) {\n          var labelUnionRect = estimateLabelUnionRect(axis);\n\n          if (labelUnionRect) {\n            var dim = axis.isHorizontal() ? 'height' : 'width';\n            var margin = axis.model.get(['axisLabel', 'margin']);\n            gridRect[dim] -= labelUnionRect[dim] + margin;\n\n            if (axis.position === 'top') {\n              gridRect.y += labelUnionRect.height + margin;\n            } else if (axis.position === 'left') {\n              gridRect.x += labelUnionRect.width + margin;\n            }\n          }\n        }\n      });\n      adjustAxes();\n    }\n\n    each(this._coordsList, function (coord) {\n      // Calculate affine matrix to accelerate the data to point transform.\n      // If all the axes scales are time or value.\n      coord.calcAffineTransform();\n    });\n\n    function adjustAxes() {\n      each(axesList, function (axis) {\n        var isHorizontal = axis.isHorizontal();\n        var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n        var idx = axis.inverse ? 1 : 0;\n        axis.setExtent(extent[idx], extent[1 - idx]);\n        updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n      });\n    }\n  };\n\n  Grid.prototype.getAxis = function (dim, axisIndex) {\n    var axesMapOnDim = this._axesMap[dim];\n\n    if (axesMapOnDim != null) {\n      return axesMapOnDim[axisIndex || 0]; // if (axisIndex == null) {\n      //     Find first axis\n      //     for (let name in axesMapOnDim) {\n      //         if (axesMapOnDim.hasOwnProperty(name)) {\n      //             return axesMapOnDim[name];\n      //         }\n      //     }\n      // }\n      // return axesMapOnDim[axisIndex];\n    }\n  };\n\n  Grid.prototype.getAxes = function () {\n    return this._axesList.slice();\n  };\n\n  Grid.prototype.getCartesian = function (xAxisIndex, yAxisIndex) {\n    if (xAxisIndex != null && yAxisIndex != null) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      return this._coordsMap[key];\n    }\n\n    if (isObject(xAxisIndex)) {\n      yAxisIndex = xAxisIndex.yAxisIndex;\n      xAxisIndex = xAxisIndex.xAxisIndex;\n    }\n\n    for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n      if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n        return coordList[i];\n      }\n    }\n  };\n\n  Grid.prototype.getCartesians = function () {\n    return this._coordsList.slice();\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.convertToPixel = function (ecModel, finder, value) {\n    var target = this._findConvertTarget(finder);\n\n    return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.convertFromPixel = function (ecModel, finder, value) {\n    var target = this._findConvertTarget(finder);\n\n    return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n  };\n\n  Grid.prototype._findConvertTarget = function (finder) {\n    var seriesModel = finder.seriesModel;\n    var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\n    var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\n    var gridModel = finder.gridModel;\n    var coordsList = this._coordsList;\n    var cartesian;\n    var axis;\n\n    if (seriesModel) {\n      cartesian = seriesModel.coordinateSystem;\n      indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n    } else if (xAxisModel && yAxisModel) {\n      cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n    } else if (xAxisModel) {\n      axis = this.getAxis('x', xAxisModel.componentIndex);\n    } else if (yAxisModel) {\n      axis = this.getAxis('y', yAxisModel.componentIndex);\n    } // Lowest priority.\n    else if (gridModel) {\n        var grid = gridModel.coordinateSystem;\n\n        if (grid === this) {\n          cartesian = this._coordsList[0];\n        }\n      }\n\n    return {\n      cartesian: cartesian,\n      axis: axis\n    };\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.containPoint = function (point) {\n    var coord = this._coordsList[0];\n\n    if (coord) {\n      return coord.containPoint(point);\n    }\n  };\n  /**\n   * Initialize cartesian coordinate systems\n   */\n\n\n  Grid.prototype._initCartesian = function (gridModel, ecModel, api) {\n    var _this = this;\n\n    var grid = this;\n    var axisPositionUsed = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false\n    };\n    var axesMap = {\n      x: {},\n      y: {}\n    };\n    var axesCount = {\n      x: 0,\n      y: 0\n    }; /// Create axis\n\n    ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n    ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n    if (!axesCount.x || !axesCount.y) {\n      // Roll back when there no either x or y axis\n      this._axesMap = {};\n      this._axesList = [];\n      return;\n    }\n\n    this._axesMap = axesMap; /// Create cartesian2d\n\n    each(axesMap.x, function (xAxis, xAxisIndex) {\n      each(axesMap.y, function (yAxis, yAxisIndex) {\n        var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n        var cartesian = new Cartesian2D(key);\n        cartesian.master = _this;\n        cartesian.model = gridModel;\n        _this._coordsMap[key] = cartesian;\n\n        _this._coordsList.push(cartesian);\n\n        cartesian.addAxis(xAxis);\n        cartesian.addAxis(yAxis);\n      });\n    });\n\n    function createAxisCreator(dimName) {\n      return function (axisModel, idx) {\n        if (!isAxisUsedInTheGrid(axisModel, gridModel)) {\n          return;\n        }\n\n        var axisPosition = axisModel.get('position');\n\n        if (dimName === 'x') {\n          // Fix position\n          if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n            // Default bottom of X\n            axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n          }\n        } else {\n          // Fix position\n          if (axisPosition !== 'left' && axisPosition !== 'right') {\n            // Default left of Y\n            axisPosition = axisPositionUsed.left ? 'right' : 'left';\n          }\n        }\n\n        axisPositionUsed[axisPosition] = true;\n        var axis = new Axis2D(dimName, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n        var isCategory = axis.type === 'category';\n        axis.onBand = isCategory && axisModel.get('boundaryGap');\n        axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n        axisModel.axis = axis; // Inject axisModel into axis\n\n        axis.model = axisModel; // Inject grid info axis\n\n        axis.grid = grid; // Index of axis, can be used as key\n\n        axis.index = idx;\n\n        grid._axesList.push(axis);\n\n        axesMap[dimName][idx] = axis;\n        axesCount[dimName]++;\n      };\n    }\n  };\n  /**\n   * Update cartesian properties from series.\n   */\n\n\n  Grid.prototype._updateScale = function (ecModel, gridModel) {\n    // Reset scale\n    each(this._axesList, function (axis) {\n      axis.scale.setExtent(Infinity, -Infinity);\n\n      if (axis.type === 'category') {\n        var categorySortInfo = axis.model.get('categorySortInfo');\n        axis.scale.setSortInfo(categorySortInfo);\n      }\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (isCartesian2DSeries(seriesModel)) {\n        var axesModelMap = findAxisModels(seriesModel);\n        var xAxisModel = axesModelMap.xAxisModel;\n        var yAxisModel = axesModelMap.yAxisModel;\n\n        if (!isAxisUsedInTheGrid(xAxisModel, gridModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel)) {\n          return;\n        }\n\n        var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        var data = seriesModel.getData();\n        var xAxis = cartesian.getAxis('x');\n        var yAxis = cartesian.getAxis('y');\n\n        if (data.type === 'list') {\n          unionExtent(data, xAxis);\n          unionExtent(data, yAxis);\n        }\n      }\n    }, this);\n\n    function unionExtent(data, axis) {\n      each(getDataDimensionsOnAxis(data, axis.dim), function (dim) {\n        axis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  };\n  /**\n   * @param dim 'x' or 'y' or 'auto' or null/undefined\n   */\n\n\n  Grid.prototype.getTooltipAxes = function (dim) {\n    var baseAxes = [];\n    var otherAxes = [];\n    each(this.getCartesians(), function (cartesian) {\n      var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n      var otherAxis = cartesian.getOtherAxis(baseAxis);\n      indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n      indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n    });\n    return {\n      baseAxes: baseAxes,\n      otherAxes: otherAxes\n    };\n  };\n\n  Grid.create = function (ecModel, api) {\n    var grids = [];\n    ecModel.eachComponent('grid', function (gridModel, idx) {\n      var grid = new Grid(gridModel, ecModel, api);\n      grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n      // should be performed in create stage.\n\n      grid.resize(gridModel, api, true);\n      gridModel.coordinateSystem = grid;\n      grids.push(grid);\n    }); // Inject the coordinateSystems into seriesModel\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (!isCartesian2DSeries(seriesModel)) {\n        return;\n      }\n\n      var axesModelMap = findAxisModels(seriesModel);\n      var xAxisModel = axesModelMap.xAxisModel;\n      var yAxisModel = axesModelMap.yAxisModel;\n      var gridModel = xAxisModel.getCoordSysModel();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!gridModel) {\n          throw new Error('Grid \"' + retrieve3(xAxisModel.get('gridIndex'), xAxisModel.get('gridId'), 0) + '\" not found');\n        }\n\n        if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n          throw new Error('xAxis and yAxis must use the same grid');\n        }\n      }\n\n      var grid = gridModel.coordinateSystem;\n      seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n    });\n    return grids;\n  }; // For deciding which dimensions to use when creating list data\n\n\n  Grid.dimensions = cartesian2DDimensions;\n  return Grid;\n}();\n/**\n * Check if the axis is used in the specified grid.\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, // Key: see `getOnZeroRecordKey`\nonZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get(['axisLine', 'onZero']);\n  var onZeroAxisIndex = axisModel.get(['axisLine', 'onZeroAxisIndex']);\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}